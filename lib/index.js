!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.webpackNumbers=t():e.webpackNumbers=t()}(global,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=12)}([function(e,t){e.exports=require("prop-types")},function(e,t){e.exports=require("react")},function(e,t){e.exports=require("classnames")},function(e,t){e.exports=require("polished")},function(e,t){e.exports=require("detect-node")},function(e,t){e.exports=require("react-jss")},function(e,t){e.exports=require("extend")},function(e,t){e.exports=require("react-transition-group")},function(e,t){e.exports=require("hoist-non-react-statics")},function(e,t){e.exports=require("d3-shape")},function(e,t){e.exports=require("howler")},function(e,t){e.exports=require("prismjs")},function(e,t,r){"use strict";r.r(t),r.d(t,"Arwes",(function(){return ge})),r.d(t,"Words",(function(){return Ue})),r.d(t,"Heading",(function(){return nt})),r.d(t,"Paragraph",(function(){return ut})),r.d(t,"Link",(function(){return bt})),r.d(t,"Blockquote",(function(){return wt})),r.d(t,"List",(function(){return zt})),r.d(t,"Content",(function(){return Ft})),r.d(t,"Frame",(function(){return or})),r.d(t,"Button",(function(){return Ar})),r.d(t,"Line",(function(){return zr})),r.d(t,"Loading",(function(){return Wr})),r.d(t,"Image",(function(){return rn})),r.d(t,"Code",(function(){return vn})),r.d(t,"Table",(function(){return Pn})),r.d(t,"Project",(function(){return An})),r.d(t,"Header",(function(){return Hn})),r.d(t,"Footer",(function(){return no})),r.d(t,"Grid",(function(){return jo})),r.d(t,"Row",(function(){return Oo})),r.d(t,"Col",(function(){return wo})),r.d(t,"Animation",(function(){return O})),r.d(t,"Appear",(function(){return Eo})),r.d(t,"Highlight",(function(){return vr})),r.d(t,"Puffs",(function(){return D})),r.d(t,"Logo",(function(){return Lo})),r.d(t,"ThemeProvider",(function(){return $o})),r.d(t,"withStyles",(function(){return i})),r.d(t,"createTheme",(function(){return Ho})),r.d(t,"SoundsProvider",(function(){return ci})),r.d(t,"withSounds",(function(){return qe})),r.d(t,"createSounds",(function(){return ui})),r.d(t,"createLoader",(function(){return H})),r.d(t,"createResponsive",(function(){return Q})),r.d(t,"createPlayer",(function(){return Jo})),r.d(t,"utils",(function(){return si}));var n={};r.r(n),r.d(n,"mapProps",(function(){return C})),r.d(n,"getResponsiveResource",(function(){return z}));var o=r(5),i=r.n(o).a,a=r(1),c=r.n(a),l=r(0),u=r.n(l),s=r(2),f=r.n(s),p=r(7);function m(e){return(m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var y=["animate","show","appear","timeout","children"];function b(){return(b=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function d(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function h(e,t,r){var n;return n=function(e,t){if("object"!=m(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=m(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(t,"string"),(t="symbol"==m(n)?n:n+"")in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function v(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r={};for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){if(t.indexOf(n)>=0)continue;r[n]=e[n]}return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function g(e){var t=e.animate,r=e.show,n=e.appear,o=e.timeout,i=e.children,a=v(e,y);return c.a.createElement(p.Transition,b({appear:!!t&&n,timeout:t?o:0,in:r},a),(function(e){return i(t?function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?d(Object(r),!0).forEach((function(t){h(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):d(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({status:e},function(e){return{entering:"entering"===e,entered:"entered"===e,exiting:"exiting"===e,exited:"exited"===e}}(e)):{status:""})}))}g.propTypes={animate:u.a.bool,show:u.a.bool,children:u.a.func.isRequired,appear:u.a.bool,timeout:u.a.oneOfType([u.a.number,u.a.shape({enter:u.a.number,exit:u.a.number})])},g.defaultProps={show:!0,animate:!0,appear:!0,timeout:0};var O=g,w=["theme","classes","animate","puffInterval","quantity","className","children"];function j(e){return(j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function P(){return(P=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function S(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r={};for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){if(t.indexOf(n)>=0)continue;r[n]=e[n]}return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function k(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function x(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,A(n.key),n)}}function E(e,t,r){return t=T(t),function(e,t){if(t&&("object"===j(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,function(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return function(){return!!e}()}()?Reflect.construct(t,r||[],T(e).constructor):t.apply(e,r))}function T(e){return(T=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function R(e,t){return(R=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function N(e,t,r){return(t=A(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function A(e){var t=function(e,t){if("object"!=j(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=j(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==j(t)?t:t+""}var q=function(e){function t(){var e;k(this,t);for(var r=arguments.length,n=new Array(r),o=0;o<r;o++)n[o]=arguments[o];return N(e=E(this,t,[].concat(n)),"element",null),N(e,"puffTimeout",null),N(e,"puffElementsTimeout",null),N(e,"onPuffs",(function(){for(var t=[],r=0;r<e.props.quantity;r++)t.push(e.createPuff());t.forEach((function(t){return e.element.appendChild(t)})),e.puffElementsTimeout=setTimeout((function(){t.forEach((function(e){return e.remove()}))}),e.props.puffInterval-100)})),e}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&R(e,t)}(t,e),r=t,(n=[{key:"componentDidMount",value:function(){this.props.animate&&this.startAnimations()}},{key:"componentDidUpdate",value:function(e){e.animate!==this.props.animate&&(this.props.animate?this.startAnimations():this.stopAnimations())}},{key:"componentWillUnmount",value:function(){this.stopAnimations()}},{key:"render",value:function(){var e=this,t=this.props,r=(t.theme,t.classes),n=(t.animate,t.puffInterval,t.quantity,t.className),o=t.children,i=S(t,w),a=f()(r.root,n);return c.a.createElement("div",P({className:a,ref:function(t){return e.element=t}},i),c.a.createElement("div",{className:r.children},o))}},{key:"stopAnimations",value:function(){clearInterval(this.puffTimeout),clearTimeout(this.puffElementsTimeout)}},{key:"startAnimations",value:function(){this.onPuffs(),this.puffTimeout=setInterval(this.onPuffs,this.props.puffInterval)}},{key:"createPuff",value:function(){var e=this.props.classes,t=document.createElement("div"),r=Math.round(Math.random()),n=e.puff+(r?" "+e.puffLong:"");t.setAttribute("class",n);var o=1e3+Math.round(3e3*Math.random());t.style.animationDuration=o+"ms";var i=this.element.offsetWidth,a=this.element.offsetHeight;return t.style.left=50+Math.round(Math.random()*(i-100))+"px",t.style.top=100+Math.round(Math.random()*(a-200))+"px",t}}])&&x(r.prototype,n),o&&x(r,o),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,n,o}(a.Component);N(q,"propTypes",{theme:u.a.any.isRequired,classes:u.a.any.isRequired,animate:u.a.bool,puffInterval:u.a.number,quantity:u.a.number}),N(q,"defaultProps",{animate:!0,puffInterval:5e3,quantity:8});var _=r(3),D=i((function(e){var t=e.alpha/1.5,r=e.shadowLength,n=2*e.shadowLength;return{root:{display:"block",position:"relative"},children:{display:"block"},puff:{position:"absolute",display:"block",width:1,height:1,backgroundColor:Object(_.rgba)(e.color.primary.base,t),boxShadow:"0 0 ".concat(r,"px ").concat(r,"px ")+Object(_.rgba)(e.color.primary.base,t),borderRadius:"50%",opacity:0,animation:"$arwes-puff ".concat(1e3,"ms ease-out 0ms 1")},puffLong:{boxShadow:"0 0 ".concat(n,"px ").concat(n,"px ")+Object(_.rgba)(e.color.primary.base,t),animation:"$arwes-puff-1 ".concat(1e3,"ms ease-out 0ms 1")},"@keyframes arwes-puff":{"0%":{transform:"scale(0.5, 0.5) translate(0, 30px)",opacity:.25},"75%":{opacity:1},"100%":{transform:"scale(1.5, 1.5) translate(0, -30px)",opacity:0}},"@keyframes arwes-puff-1":{"0%":{transform:"scale(0.5, 0.5) translate(0, 50px)",opacity:.25},"75%":{opacity:1},"100%":{transform:"scale(1.5, 1.5) translate(0, -50px)",opacity:0}}}}),{injectTheme:!0})(q),C=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(){},r={},n=Object.keys(e||{});if(!n.length)return{};var o=n.map((function(t){return{name:t,value:e[t]}})),i=o.map((function(e){return t(e.name,e.value)}));return i.forEach((function(e){r[e.name]=e.value})),r},z=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=null;if("string"==typeof e)r=e;else if(e){var n=t.small,o=t.medium,i=t.large;r=n?e.small:o?e.medium:i?e.large:e.xlarge}return r};function L(e){return(L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function $(e){return function(e){if(Array.isArray(e))return I(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return I(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return I(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function I(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function B(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function F(e,t,r){var n;return n=function(e,t){if("object"!=L(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=L(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(t,"string"),(t="symbol"==L(n)?n:n+"")in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var M=function(e){return new Promise((function(t,r){var n=new Image;n.onload=function(){return t()},n.onerror=n.onabort=function(){return r()},n.src=e}))},W=function(e){return new Promise((function(t,r){var n=new Audio;n.addEventListener("canplaythrough",(function(){return t()})),n.onerror=n.onabort=function(){return r()},n.src=e}))},H=function(e){var t=function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?B(Object(r),!0).forEach((function(t){F(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):B(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({loadImage:M,loadSound:W},e);return{load:function(e,r){var n=e||{},o=n.images,i=void 0===o?[]:o,a=n.sounds,c=void 0===a?[]:a,l=Object.assign({timeout:3e4},r);return new Promise((function(e,r){setTimeout(r,l.timeout),Promise.all([].concat($(i.map((function(e){return t.loadImage(e)}))),$(c.map((function(e){return t.loadSound(e)}))))).then(e,r)}))}}},U=r(4),G=r.n(U),X=function(e){var t,r=e.toLowerCase(),n=window.document,o=n.documentElement;if(void 0===window["inner"+e])t=o["client"+e];else if(window["inner"+e]!==o["client"+e]){var i=n.createElement("body");i.id="vpw-test-b",i.style.cssText="overflow:scroll";var a=n.createElement("div");a.id="vpw-test-d",a.style.cssText="position:absolute;top:-1000px",a.innerHTML="<style>@media("+r+":"+o["client"+e]+"px){body#vpw-test-b div#vpw-test-d{"+r+":7px!important}}</style>",i.appendChild(a),o.insertBefore(i,n.head),t=7===a["offset"+e]?o["client"+e]:window["inner"+e],o.removeChild(i)}else t=window["inner"+e];return t},Y=function(e,t,r,n){var o=G.a?1024:X("Width"),i=G.a?768:X("Height");return o=e&&o<e?e:o,i=t&&i<t?t:i,{width:o=r&&o>r?r:o,height:i=n&&i>n?n:i}};function V(e){return(V="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function J(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function K(e,t,r){var n;return n=function(e,t){if("object"!=V(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=V(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(t,"string"),(t="symbol"==V(n)?n:n+"")in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Q=function(e){var t=function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?J(Object(r),!0).forEach((function(t){K(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):J(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({getTheme:function(){return{}},getDimensions:Y},e);return{get:function(){var e=t.getTheme(),r=t.getDimensions().width,n=e.responsive,o=n.small,i=n.medium,a=n.large;return r<=o?{small:!0,status:"small"}:r<=i?{medium:!0,status:"medium"}:r<=a?{large:!0,status:"large"}:{xlarge:!0,status:"xlarge"}},on:function(e){var t=this,r=this.get().status,n=function(){var n=t.get();n.status!==r&&(e(n),r=n.status)};return G.a||window.addEventListener("resize",n,!1),n},off:function(e){G.a||window.removeEventListener("resize",e,!1)}}},Z=["Animation","Puffs","createResponsive","createLoader","theme","classes","animation","animate","show","background","pattern","loadResources","showResources","puffsProps","className","children"];function ee(e){return(ee="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function te(){return(te=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function re(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r={};for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){if(t.indexOf(n)>=0)continue;r[n]=e[n]}return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function ne(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function oe(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,ue(n.key),n)}}function ie(e,t,r){return t=ae(t),function(e,t){if(t&&("object"===ee(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,function(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return function(){return!!e}()}()?Reflect.construct(t,r||[],ae(e).constructor):t.apply(e,r))}function ae(e){return(ae=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function ce(e,t){return(ce=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function le(e,t,r){return(t=ue(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function ue(e){var t=function(e,t){if("object"!=ee(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=ee(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==ee(t)?t:t+""}var se=function(e){function t(){var e;return ne(this,t),(e=ie(this,t,arguments)).state={readyResources:!1},e.loader=e.props.createLoader(),e.responsive=e.props.createResponsive({getTheme:function(){return e.props.theme}}),e}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&ce(e,t)}(t,e),r=t,(n=[{key:"componentDidMount",value:function(){this.loadResources()}},{key:"componentDidUpdate",value:function(e){e.background===this.props.background&&e.pattern===this.props.pattern||this.loadResources()}},{key:"render",value:function(){var e,t,r=this.props,n=r.Animation,o=r.Puffs,i=(r.createResponsive,r.createLoader,r.theme),a=r.classes,l=r.animation,u=r.animate,s=r.show,p=(r.background,r.pattern,r.loadResources,r.showResources),m=r.puffsProps,y=r.className,b=r.children,d=re(r,Z),h=this.getActiveResources(),v=(!u||s)&&p&&this.state.readyResources,g=f()("arwes",a.root,le({},a.resourcesReadyToShow,v),y);return v&&h.background&&(e={backgroundImage:"url(".concat(h.background,")")}),v&&h.pattern&&(t={backgroundImage:"url(".concat(h.pattern,")")}),c.a.createElement(n,te({show:s,animate:u,timeout:i.animTime},l),(function(r){return c.a.createElement("div",te({className:f()(g,a[r.status])},d),c.a.createElement("div",{className:a.background,style:e}),c.a.createElement("div",{className:a.pattern,style:t}),c.a.createElement(o,te({className:f()(a.puffs,m&&m.className),animate:!(!s||!u)},m)),c.a.createElement("div",{className:a.main},"function"==typeof b?b(r):b))}))}},{key:"getActiveResources",value:function(){var e=this.props,t=e.background,r=e.pattern,n=this.responsive.get();return{background:z(t,n),pattern:z(r,n)}}},{key:"loadResources",value:function(){var e=this;if(this.props.loadResources){var t=this.getActiveResources(),r=t.background,n=t.pattern;this.setState({readyResources:!1});var o=[];r&&o.push(r),n&&o.push(n),this.loader.load({images:o}).then((function(){e.setState({readyResources:!0})}))}}}])&&oe(r.prototype,n),o&&oe(r,o),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,n,o}(a.Component);le(se,"propTypes",{Animation:u.a.any.isRequired,Puffs:u.a.any.isRequired,createResponsive:u.a.any.isRequired,createLoader:u.a.any.isRequired,theme:u.a.any.isRequired,classes:u.a.any.isRequired,animate:u.a.bool,show:u.a.bool,animation:u.a.object,background:u.a.oneOfType([u.a.string,u.a.shape({small:u.a.string.isRequired,medium:u.a.string.isRequired,large:u.a.string.isRequired,xlarge:u.a.string.isRequired})]),pattern:u.a.oneOfType([u.a.string,u.a.shape({small:u.a.string.isRequired,medium:u.a.string.isRequired,large:u.a.string.isRequired,xlarge:u.a.string.isRequired})]),loadResources:u.a.bool,showResources:u.a.bool,puffsProps:u.a.object,children:u.a.any}),le(se,"defaultProps",{Animation:O,animate:!0,Puffs:D,createResponsive:Q,createLoader:H,show:!0,loadResources:!0,showResources:!0});var fe=function(e,t,r){return{"::selection":{backgroundColor:t,color:r,textShadow:"none"},"::-moz-selection":{backgroundColor:t,color:r,textShadow:"none"}}},pe=function(e,t,r){return{"::-webkit-scrollbar":{width:10,height:10,backgroundColor:t},"::-webkit-scrollbar-thumb":{border:"1px solid "+r,cursor:"pointer","&:hover":{borderColor:Object(_.lighten)(e.accent,r)}}}};function me(e){return(me="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ye(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function be(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?ye(Object(r),!0).forEach((function(t){de(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):ye(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function de(e,t,r){var n;return n=function(e,t){if("object"!=me(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=me(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(t,"string"),(t="symbol"==me(n)?n:n+"")in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var he=function(e){return C(e,(function(e,t){return{name:"& ".concat(e),value:t}}))},ve={position:"absolute",left:0,right:0,top:0,bottom:0},ge=i((function(e){return{root:be(be(be(be({},ve),{},{position:"fixed",overflow:"hidden",display:"block",boxSizing:"border-box",lineHeight:e.typography.lineHeight,fontFamily:e.typography.fontFamily,fontSize:e.typography.fontSize,color:e.color.primary.base,transition:"all ".concat(e.animTime,"ms ease-out"),opacity:1,"&$exiting, &$exited":{opacity:0},"& *, & *:before, & *:after":{boxSizing:"inherit"}},he((t=e.color.primary.base,{"::-webkit-input-placeholder":{color:t},"::-moz-placeholder":{color:t},":-ms-input-placeholder":{color:t},":-moz-placeholder":{color:t}}))),he(pe(e,e.background.primary.level0,e.color.primary.base))),he(fe(0,e.color.primary.base,e.background.primary.level0))),background:be(be({},ve),{},{zIndex:1,backgroundSize:"cover",backgroundPosition:"center",backgroundColor:e.background.primary.level0,transition:"all ".concat(e.animTime,"ms ease-in"),opacity:0}),pattern:be(be({},ve),{},{zIndex:2,backgroundRepeat:"repeat",backgroundPosition:"center top",backgroundAttachment:"fixed",transition:"all ".concat(e.animTime,"ms ease-in"),opacity:0}),puffs:be(be({},ve),{},{zIndex:3}),main:be(be({},ve),{},{zIndex:4,display:"block",overflowY:"auto"}),resourcesReadyToShow:{"& $background, & $pattern":{opacity:1}},entering:{},entered:{},exiting:{},exited:{}};var t}),{injectTheme:!0})(se),Oe=r(8),we=r.n(Oe);function je(e){return(je="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Pe(){return(Pe=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function Se(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function ke(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,Ae(n.key),n)}}function xe(e,t,r){return t=Ee(t),function(e,t){if(t&&("object"===je(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,function(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return function(){return!!e}()}()?Reflect.construct(t,r||[],Ee(e).constructor):t.apply(e,r))}function Ee(e){return(Ee=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Te(e,t){return(Te=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function Re(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Ne(e,t,r){return(t=Ae(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Ae(e){var t=function(e,t){if("object"!=je(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=je(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==je(t)?t:t+""}var qe=function(){return function(e){var t=e.displayName||e.name||"Component",r=function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Re(Object(r),!0).forEach((function(t){Ne(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Re(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({},e.defaultProps);delete r.sounds;var n=function(t){function r(){return Se(this,r),xe(this,r,arguments)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Te(e,t)}(r,t),n=r,(o=[{key:"render",value:function(){var t=this.props,r=this.context;return c.a.createElement(e,Pe({sounds:r.sounds},t))}}])&&ke(n.prototype,o),i&&ke(n,i),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,o,i}(a.Component);return Ne(n,"displayName","AS(".concat(t,")")),Ne(n,"defaultProps",r),Ne(n,"contextTypes",{sounds:u.a.object}),we()(n,e)}};!function(){if(!G.a){if("performance"in window||(window.performance={}),!("now"in window.performance)){var e=Date.now();performance.timing&&performance.timing.navigationStart&&(e=performance.timing.navigationStart),window.performance.now=function(){return Date.now()-e}}for(var t=0,r=["ms","moz","webkit","o"],n=0;n<r.length&&!window.requestAnimationFrame;++n)window.requestAnimationFrame=window[r[n]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[r[n]+"CancelAnimationFrame"]||window[r[n]+"CancelRequestAnimationFrame"];window.requestAnimationFrame||(window.requestAnimationFrame=function(e){var r=(new Date).getTime(),n=Math.max(0,16-(r-t)),o=window.setTimeout((function(){e(r+n)}),n);return t=r+n,o}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(e){clearTimeout(e)})}}();var _e=["theme","classes","sounds","animate","show","animation","layer","blinkText","className","children"];function De(e){return(De="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ce(){return(Ce=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function ze(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r={};for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){if(t.indexOf(n)>=0)continue;r[n]=e[n]}return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function Le(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function $e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,We(n.key),n)}}function Ie(e,t,r){return t=Be(t),function(e,t){if(t&&("object"===De(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,function(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return function(){return!!e}()}()?Reflect.construct(t,r||[],Be(e).constructor):t.apply(e,r))}function Be(e){return(Be=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Fe(e,t){return(Fe=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function Me(e,t,r){return(t=We(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function We(e){var t=function(e,t){if("object"!=De(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=De(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==De(t)?t:t+""}var He=function(e){function t(){var e;return Le(this,t),Me(e=Ie(this,t,arguments),"currentAnimationFrame",null),e.state={text:"",animating:!1},e}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Fe(e,t)}(t,e),r=t,(n=[{key:"componentDidMount",value:function(){this.props.animate&&this.props.show&&this.animateIn()}},{key:"componentDidUpdate",value:function(e){var t=this.props,r=t.animate,n=t.show,o=t.children,i=r!==e.animate,a=n!==e.show,c=o!==e.children;r&&(a?n?this.animateIn():this.animateOut():c&&this.animateIn()),!r&&i&&this.stopAnimation()}},{key:"componentWillUnmount",value:function(){this.stopAnimation()}},{key:"render",value:function(){var e=this.props,t=(e.theme,e.classes),r=(e.sounds,e.animate),n=e.show,o=(e.animation,e.layer,e.blinkText),i=e.className,a=e.children,l=ze(e,_e),u=this.state,s=u.animating,p=u.text,m=f()(t.root,Me(Me({},t.hide,r&&!n&&!s),t.animating,s),i);return c.a.createElement("span",Ce({className:f()(m)},l),c.a.createElement("span",{className:t.children},a),s&&c.a.createElement("span",{className:t.text},p,c.a.createElement("span",{className:t.blink,dangerouslySetInnerHTML:{__html:o}})))}},{key:"animateIn",value:function(){this.cancelNextAnimation(),this.startAnimation(!0)}},{key:"animateOut",value:function(){this.cancelNextAnimation(),this.startAnimation(!1)}},{key:"stopAnimation",value:function(){this.cancelNextAnimation(),this.setState({animating:!1});var e,t=this.props,r=t.animate,n=t.sounds;r&&(null===(e=n.typing)||void 0===e||e.stop())}},{key:"cancelNextAnimation",value:function(){window.cancelAnimationFrame(this.currentAnimationFrame)}},{key:"startAnimation",value:function(e){var t=this,r=this.props,n=r.theme,o=r.children,i=r.animate,a=r.sounds,c=r.animation;if(0!==o.length){var l;i&&(null===(l=a.typing)||void 0===l||l.play());var u=1e3/60*o.length,s=(c||{}).timeout,f=void 0===s?n.animTime:s,p=Math.min(u,f);this.cancelNextAnimation(),this.setState({animating:!0,text:e?"":o});var m=o.length,y=performance.now(),b=null;this.currentAnimationFrame=window.requestAnimationFrame((function r(n){y||(y=n),b=Math.max(n-y,0),e||(b=p-b);var i=Math.round(b*m/p),a=o.substring(0,i);t.setState({text:a}),(e?i<=m:i>0)?t.currentAnimationFrame=window.requestAnimationFrame(r):t.stopAnimation()}))}}}])&&$e(r.prototype,n),o&&$e(r,o),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,n,o}(a.Component);Me(He,"propTypes",{theme:u.a.any.isRequired,classes:u.a.any.isRequired,animate:u.a.bool,show:u.a.bool,animation:u.a.shape({timeout:u.a.number}),sounds:u.a.object,layer:u.a.oneOf(["","primary","secondary","header","control","success","alert","disabled"]),blinkText:u.a.string,children:u.a.string.isRequired}),Me(He,"defaultProps",{animate:!0,sounds:{},show:!0,layer:"",blinkText:"&#9611;",children:""});var Ue=i((function(e){return{root:{position:"relative",display:"inline-block",color:function(t){return e.color[t.layer]&&e.color[t.layer].base}},children:{display:"inline-block"},text:{position:"absolute",left:0,right:0,top:0,overflow:"hidden",display:"inline-block",opacity:0},blink:{position:"relative",width:0,height:0,display:"inline-block",animation:"$arwes-words-blink ".concat(e.animTime,"ms step-end infinite")},hide:{opacity:0},animating:{"& $children":{opacity:0},"& $text":{opacity:1}},"@keyframes arwes-words-blink":{"0%, 100%":{color:"transparent"},"50%":{color:"inherit"}}}}),{injectTheme:!0})(qe()(He));function Ge(e){return(Ge="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var Xe=["theme","classes","node","className","children"];function Ye(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Ve(e,t,r){var n;return n=function(e,t){if("object"!=Ge(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=Ge(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(t,"string"),(t="symbol"==Ge(n)?n:n+"")in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Je(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r={};for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){if(t.indexOf(n)>=0)continue;r[n]=e[n]}return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function Ke(e){e.theme;var t=e.classes,r=e.node,n=e.className,o=e.children,i=Je(e,Xe),a=f()(t.root,n);return c.a.createElement(r,function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Ye(Object(r),!0).forEach((function(t){Ve(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Ye(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({className:a},i),o)}function Qe(e){return(Qe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ze(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function et(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Ze(Object(r),!0).forEach((function(t){tt(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Ze(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function tt(e,t,r){var n;return n=function(e,t){if("object"!=Qe(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=Qe(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(t,"string"),(t="symbol"==Qe(n)?n:n+"")in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}Ke.propTypes={theme:u.a.any.isRequired,classes:u.a.any.isRequired,node:u.a.oneOf(["h1","h2","h3","h4","h5","h6"])},Ke.defaultProps={node:"h1"};var rt=function(e){return{margin:[0,0,e.margin],fontFamily:e.typography.headerFontFamily,fontWeight:"bold",textTransform:"uppercase",textShadow:"0 0 ".concat(e.shadowLength,"px ")+Object(_.rgba)(e.color.header.base,e.alpha),color:e.color.header.base,transition:"color ".concat(e.animTime,"ms ease-out")}},nt=i((function(e){return{root:et(et({},rt(e)),{},{"h1&":{fontSize:e.typography.headerSizes.h1},"h2&":{fontSize:e.typography.headerSizes.h2},"h3&":{fontSize:e.typography.headerSizes.h3},"h4&":{fontSize:e.typography.headerSizes.h4},"h5&":{fontSize:e.typography.headerSizes.h5},"h6&":{fontSize:e.typography.headerSizes.h6}})}}),{injectTheme:!0})(Ke),ot=["theme","classes","className","children"];function it(){return(it=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function at(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r={};for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){if(t.indexOf(n)>=0)continue;r[n]=e[n]}return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function ct(e){e.theme;var t=e.classes,r=e.className,n=e.children,o=at(e,ot),i=f()(t.root,r);return c.a.createElement("p",it({className:i},o),n)}ct.propTypes={theme:u.a.any.isRequired,classes:u.a.any.isRequired};var lt=function(e){return{margin:[0,0,e.margin]}},ut=i((function(e){return{root:lt(e)}}),{injectTheme:!0})(ct),st=["theme","classes","className","children"];function ft(){return(ft=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function pt(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r={};for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){if(t.indexOf(n)>=0)continue;r[n]=e[n]}return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function mt(e){e.theme;var t=e.classes,r=e.className,n=e.children,o=pt(e,st),i=f()(t.root,r);return c.a.createElement("a",ft({className:i},o),n)}mt.propTypes={theme:u.a.any.isRequired,classes:u.a.any.isRequired};var yt=function(e){return{color:e.color.control.base,textShadow:"0 0 ".concat(e.shadowLength,"px ")+Object(_.rgba)(e.color.control.base,e.alpha),transition:"color ".concat(e.animTime,"ms ease-out"),textDecoration:"none",cursor:"pointer","&:hover":{color:e.color.control.light}}},bt=i((function(e){return{root:yt(e)}}),{injectTheme:!0})(mt),dt=["theme","classes","layer","className","children"];function ht(){return(ht=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function vt(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r={};for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){if(t.indexOf(n)>=0)continue;r[n]=e[n]}return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function gt(e){e.theme;var t=e.classes,r=e.layer,n=e.className,o=e.children,i=vt(e,dt),a=f()(t.root,n);return c.a.createElement("blockquote",ht({className:a,"data-layer":r},i),o)}gt.propTypes={theme:u.a.any.isRequired,classes:u.a.any.isRequired,layer:u.a.oneOf(["","success","alert","disabled"])};var Ot=function(e){return{display:"block",borderLeft:"4px solid "+e.color.primary.light,margin:[0,0,e.margin,e.margin],padding:[0,0,0,e.padding/2],color:e.color.primary.light,'&[data-layer="alert"]':{borderColor:e.color.alert.light,color:e.color.alert.light},'&[data-layer="success"]':{borderColor:e.color.success.light,color:e.color.success.light},'&[data-layer="disabled"]':{borderColor:e.color.disabled.light,color:e.color.disabled.light}}},wt=i((function(e){return{root:Ot(e)}}),{injectTheme:!0})(gt);function jt(e){return(jt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var Pt=["theme","classes","node","className","children"];function St(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function kt(e,t,r){var n;return n=function(e,t){if("object"!=jt(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=jt(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(t,"string"),(t="symbol"==jt(n)?n:n+"")in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function xt(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r={};for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){if(t.indexOf(n)>=0)continue;r[n]=e[n]}return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function Et(e){e.theme;var t=e.classes,r=e.node,n=e.className,o=e.children,i=xt(e,Pt),a=f()(t.root,n);return c.a.createElement(r,function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?St(Object(r),!0).forEach((function(t){kt(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):St(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({className:a},i),o)}function Tt(e){return(Tt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Rt(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Nt(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Rt(Object(r),!0).forEach((function(t){At(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Rt(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function At(e,t,r){var n;return n=function(e,t){if("object"!=Tt(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=Tt(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(t,"string"),(t="symbol"==Tt(n)?n:n+"")in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}Et.propTypes={theme:u.a.any.isRequired,classes:u.a.any.isRequired,node:u.a.oneOf(["ul","ol","dl"])},Et.defaultProps={node:"ul"};var qt=function(e){return{display:"block",margin:[0,0,e.margin,e.margin],padding:0,"& dl, & ul, & ol":{marginBottom:0}}},_t=function(e){return{marginLeft:e.margin+e.padding/2,"& li":{display:"block",listStyle:"none",paddingLeft:e.padding},"& li:before":{position:"relative",left:-e.padding/2,display:"inline-block",marginLeft:-e.padding,content:'">>"',color:e.color.primary.light}}},Dt=function(e){return{marginLeft:e.padding,paddingLeft:e.typography.fontSize,"& ol":{marginLeft:0}}},Ct=function(e){return{"& dt":{fontStyle:"italic",fontWeight:"bold"},"& dd":{marginLeft:e.typography.fontSize}}},zt=i((function(e){return{root:Nt(Nt({},qt(e)),{},{"ul&":_t(e),"ol&":Dt(e),"dl&":Ct(e)})}}),{injectTheme:!0})(Et),Lt=["theme","classes","className","children"];function $t(){return($t=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function It(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r={};for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){if(t.indexOf(n)>=0)continue;r[n]=e[n]}return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function Bt(e){e.theme;var t=e.classes,r=e.className,n=e.children,o=It(e,Lt),i=f()(t.root,r);return c.a.createElement("div",$t({className:i},o),n)}Bt.propTypes={theme:u.a.any.isRequired,classes:u.a.any.isRequired};var Ft=i((function(e){return{root:{"& h1, & h2, & h3, & h4, & h5, & h6":rt(e),"& h1":{fontSize:e.typography.headerSizes.h1},"& h2":{fontSize:e.typography.headerSizes.h2},"& h3":{fontSize:e.typography.headerSizes.h3},"& h4":{fontSize:e.typography.headerSizes.h4},"& h5":{fontSize:e.typography.headerSizes.h5},"& h6":{fontSize:e.typography.headerSizes.h6},"& a":yt(e),"& p":lt(e),"& blockquote":Ot(e),"& ul, & ol, & dl":qt(e),"& ul":_t(e),"& ol":Dt(e),"& dl":Ct(e)}}}),{injectTheme:!0})(Bt),Mt=["Animation","animation","theme","classes","sounds","animate","show","layer","level","corners","border","disabled","active","hover","noBackground","className","children"];function Wt(e){return(Wt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ht(){return(Ht=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function Ut(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r={};for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){if(t.indexOf(n)>=0)continue;r[n]=e[n]}return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function Gt(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Xt(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,Qt(n.key),n)}}function Yt(e,t,r){return t=Vt(t),function(e,t){if(t&&("object"===Wt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,function(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return function(){return!!e}()}()?Reflect.construct(t,r||[],Vt(e).constructor):t.apply(e,r))}function Vt(e){return(Vt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Jt(e,t){return(Jt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function Kt(e,t,r){return(t=Qt(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Qt(e){var t=function(e,t){if("object"!=Wt(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=Wt(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==Wt(t)?t:t+""}var Zt=function(e){function t(){return Gt(this,t),Yt(this,t,arguments)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Jt(e,t)}(t,e),r=t,(n=[{key:"componentDidMount",value:function(){var e,t=this.props,r=t.animate,n=t.show,o=t.sounds;r&&n&&(null===(e=o.deploy)||void 0===e||e.play())}},{key:"componentDidUpdate",value:function(e){var t,r=this.props,n=r.animate,o=r.show,i=r.sounds;n&&!e.show&&o&&(null===(t=i.deploy)||void 0===t||t.play())}},{key:"componentWillUnmount",value:function(){var e,t=this.props,r=t.animate,n=t.sounds;r&&(null===(e=n.deploy)||void 0===e||e.stop())}},{key:"render",value:function(){var e=this.props,t=e.Animation,r=e.animation,n=e.theme,o=e.classes,i=(e.sounds,e.animate),a=e.show,l=(e.layer,e.level,e.corners),u=e.border,s=e.disabled,p=(e.active,e.hover),m=(e.noBackground,e.className),y=e.children,b=Ut(e,Mt),d=f()(o.root,Kt({},o.hover,!s&&p),m);return c.a.createElement(t,Ht({show:a,animate:i,timeout:n.animTime},r),(function(e){return c.a.createElement("div",Ht({className:f()(d,o[e.status])},b),u&&c.a.createElement("div",{className:f()(o.border,o.borderLeft)}),u&&c.a.createElement("div",{className:f()(o.border,o.borderRight)}),u&&c.a.createElement("div",{className:f()(o.border,o.borderTop)}),u&&c.a.createElement("div",{className:f()(o.border,o.borderBottom)}),!!l&&c.a.createElement("div",{className:f()(o.corner,o.cornerLT)}),!!l&&c.a.createElement("div",{className:f()(o.corner,o.cornerLB)}),!!l&&c.a.createElement("div",{className:f()(o.corner,o.cornerRT)}),!!l&&c.a.createElement("div",{className:f()(o.corner,o.cornerRB)}),c.a.createElement("div",{className:"cover-container "+o.box},c.a.createElement("div",{className:"children-container "+o.children},"function"==typeof y?y(e):y)))}))}}])&&Xt(r.prototype,n),o&&Xt(r,o),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,n,o}(a.Component);Kt(Zt,"propTypes",{Animation:u.a.any.isRequired,theme:u.a.any.isRequired,classes:u.a.any.isRequired,animate:u.a.bool,show:u.a.bool,animation:u.a.object,sounds:u.a.object,layer:u.a.oneOf(["primary","secondary","header","control","success","alert","disabled"]),level:u.a.oneOf([0,1,2,3]),corners:u.a.oneOf([0,1,2,3,4,5,6]),border:u.a.bool,disabled:u.a.bool,active:u.a.bool,hover:u.a.bool,noBackground:u.a.bool,children:u.a.any}),Kt(Zt,"defaultProps",{Animation:O,animate:!0,sounds:{},show:!0,layer:"primary",level:0,corners:0,border:!0});var er=function(e){switch(e){case 1:return 8;case 2:case 3:return 16;case 4:case 5:return 24;default:return 32}},tr=function(e){switch(e){case 1:case 2:return 1;case 3:case 4:return 2;case 6:default:return 3}},rr=function(e,t,r){return e.color[t.disabled?"disabled":t.layer][r]},nr=function(e,t){return e.background[t.disabled?"disabled":t.layer]["level"+t.level]},or=i((function(e){return{root:{display:"block",position:"relative",padding:"1px","&$exiting, &$exited":{"& $borderLeft, & $borderRight":{height:"0%"},"& $borderTop, & $borderBottom":{width:"0%"},"& $corner":{width:0,height:0,opacity:0},"& $box":{backgroundColor:"transparent"}},"&$hover:hover":{"& $border":{borderColor:function(t){return rr(e,t,"base")},boxShadow:function(t){return"0 0 ".concat(e.shadowLength,"px ")+Object(_.rgba)(rr(e,t,"base"),e.alpha)}},"& $corner":{borderColor:function(t){return rr(e,t,"light")},boxShadow:function(t){return"0 0 ".concat(e.shadowLength,"px -").concat(e.shadowLength/2,"px ")+Object(_.rgba)(rr(e,t,"light"),e.alpha)}}}},box:{zIndex:3,height:"fit-content",position:"relative",overflow:"hidden",display:"block",transition:"background-color ".concat(e.animTime,"ms ease-in"),backgroundColor:function(t){return t.noBackground?"transparent":t.active?Object(_.rgba)(Object(_.lighten)(e.accent,nr(e,t)),e.alpha):Object(_.rgba)(nr(e,t),e.alpha)}},children:{display:"block"},border:{zIndex:1,position:"absolute",borderStyle:"solid",transition:"all ".concat(e.animTime,"ms ease-in"),borderColor:function(t){return rr(e,t,"dark")},boxShadow:function(t){return"0 0 ".concat(e.shadowLength,"px ")+Object(_.rgba)(rr(e,t,"dark"),e.alpha)},opacity:1},borderLeft:{left:0,top:"50%",transform:"translate(0, -50%)",borderWidth:"0 0 0 1px",height:"100%"},borderRight:{right:0,top:"50%",transform:"translate(0, -50%)",borderWidth:"0 0 0 1px",height:"100%"},borderTop:{top:0,left:"50%",transform:"translate(-50%, 0)",borderWidth:"1px 0 0 0",width:"100%"},borderBottom:{bottom:0,left:"50%",transform:"translate(-50%, 0)",borderWidth:"1px 0 0 0",width:"100%"},corner:{zIndex:2,position:"absolute",width:function(e){return er(e.corners)},height:function(e){return er(e.corners)},transition:"all ".concat(e.animTime,"ms ease-in"),borderStyle:"solid",borderColor:function(t){return rr(e,t,"base")},boxShadow:function(t){return"0 0 ".concat(e.shadowLength,"px -").concat(e.shadowLength/2,"px ")+Object(_.rgba)(rr(e,t,"base"),e.alpha)},opacity:1},cornerLT:{left:function(e){return-tr(e.corners)},top:function(e){return-tr(e.corners)},borderWidth:function(e){return"".concat(tr(e.corners),"px 0 0 ").concat(tr(e.corners),"px")}},cornerLB:{left:function(e){return-tr(e.corners)},bottom:function(e){return-tr(e.corners)},borderWidth:function(e){return"0 0 ".concat(tr(e.corners),"px ").concat(tr(e.corners),"px")}},cornerRT:{right:function(e){return-tr(e.corners)},top:function(e){return-tr(e.corners)},borderWidth:function(e){return"".concat(tr(e.corners),"px ").concat(tr(e.corners),"px 0 0")}},cornerRB:{right:function(e){return-tr(e.corners)},bottom:function(e){return-tr(e.corners)},borderWidth:function(e){return"0 ".concat(tr(e.corners),"px ").concat(tr(e.corners),"px 0")}},hover:{},entering:{},entered:{},exiting:{},exited:{}}}),{injectTheme:!0})(qe()(Zt)),ir=["theme","classes","layer","animate","className","children"];function ar(e){return(ar="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function cr(){return(cr=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function lr(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r={};for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){if(t.indexOf(n)>=0)continue;r[n]=e[n]}return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function ur(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function sr(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,br(n.key),n)}}function fr(e,t,r){return t=pr(t),function(e,t){if(t&&("object"===ar(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,function(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return function(){return!!e}()}()?Reflect.construct(t,r||[],pr(e).constructor):t.apply(e,r))}function pr(e){return(pr=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function mr(e,t){return(mr=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function yr(e,t,r){return(t=br(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function br(e){var t=function(e,t){if("object"!=ar(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=ar(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==ar(t)?t:t+""}var dr=["webkitAnimationEnd","mozAnimationEnd","MSAnimationEnd","oanimationend","animationend"],hr=function(e){function t(){var e;ur(this,t);for(var r=arguments.length,n=new Array(r),o=0;o<r;o++)n[o]=arguments[o];return yr(e=fr(this,t,[].concat(n)),"element",null),yr(e,"clickElement",null),yr(e,"onClick",(function(){var t=e.props,r=t.animate,n=t.classes;r&&(e.clickElement&&e.clickElement.remove(),e.clickElement=document.createElement("div"),e.clickElement.setAttribute("class",n.click),e.element.appendChild(e.clickElement),dr.forEach((function(t){e.clickElement.addEventListener(t,(function(){return e.clickElement.remove()}))})))})),e}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&mr(e,t)}(t,e),r=t,(n=[{key:"render",value:function(){var e=this,t=this.props,r=(t.theme,t.classes),n=t.layer,o=(t.animate,t.className),i=t.children,a=lr(t,ir),l=f()(r.root,r[n],o);return c.a.createElement("div",cr({className:l,ref:function(t){return e.element=t}},a),c.a.createElement("div",{className:r.children,onClick:this.onClick},i))}}])&&sr(r.prototype,n),o&&sr(r,o),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,n,o}(a.Component);yr(hr,"propTypes",{animate:u.a.bool,layer:u.a.oneOf(["primary","secondary","header","control","success","alert","disabled"])}),yr(hr,"defaultProps",{animate:!0,layer:"primary"});var vr=i((function(e){return{root:{display:"block",position:"relative"},click:{zIndex:1,position:"absolute",left:0,right:0,top:0,bottom:0,backgroundColor:function(t){return Object(_.darken)(.3,e.color[t.layer].base)},animation:"$arwes-highlight-click ".concat(e.animTime,"ms ease-out 0ms 1")},children:{zIndex:2,position:"relative",display:"block"},"@keyframes arwes-highlight-click":{"0%":{opacity:1},"100%":{opacity:0,backgroundColor:"transparent"}}}}),{injectTheme:!0})(hr),gr=["Animation","Highlight","Frame","theme","classes","sounds","animation","animate","show","layer","level","corners","disabled","active","className","buttonProps","children"];function Or(e){return(Or="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function wr(){return(wr=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function jr(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r={};for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){if(t.indexOf(n)>=0)continue;r[n]=e[n]}return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function Pr(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Sr(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,Rr(n.key),n)}}function kr(e,t,r){return t=xr(t),function(e,t){if(t&&("object"===Or(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,function(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return function(){return!!e}()}()?Reflect.construct(t,r||[],xr(e).constructor):t.apply(e,r))}function xr(e){return(xr=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Er(e,t){return(Er=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function Tr(e,t,r){return(t=Rr(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Rr(e){var t=function(e,t){if("object"!=Or(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=Or(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==Or(t)?t:t+""}var Nr=function(e){function t(){var e;Pr(this,t);for(var r=arguments.length,n=new Array(r),o=0;o<r;o++)n[o]=arguments[o];return Tr(e=kr(this,t,[].concat(n)),"onClick",(function(t){var r,n=e.props,o=n.disabled,i=n.onClick,a=n.animate,c=n.sounds;o||(i&&i(t),a&&(null===(r=c.click)||void 0===r||r.play()))})),e}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Er(e,t)}(t,e),r=t,(n=[{key:"render",value:function(){var e=this,t=this.props,r=t.Animation,n=t.Highlight,o=t.Frame,i=t.theme,a=t.classes,l=(t.sounds,t.animation),u=t.animate,s=t.show,p=t.layer,m=t.level,y=t.corners,b=t.disabled,d=t.active,h=t.className,v=t.buttonProps,g=t.children,O=jr(t,gr),w=f()(a.root,h);return c.a.createElement(r,wr({show:s,animate:u,timeout:i.animTime},l),(function(t){return c.a.createElement("div",wr({className:w},O,{onClick:e.onClick}),c.a.createElement(o,{hover:!0,animate:u,show:s,corners:y,level:m,layer:b?"disabled":p,disabled:b,active:d},c.a.createElement(n,{animate:!b,layer:p},c.a.createElement("button",wr({className:a.button,disabled:b},v),"function"==typeof g?g(t):g))))}))}}])&&Sr(r.prototype,n),o&&Sr(r,o),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,n,o}(a.Component);Tr(Nr,"propTypes",{Animation:u.a.any.isRequired,Highlight:u.a.any.isRequired,Frame:u.a.any.isRequired,theme:u.a.any.isRequired,classes:u.a.any.isRequired,animate:u.a.bool,show:u.a.bool,animation:u.a.object,sounds:u.a.object,layer:u.a.oneOf(["primary","secondary","header","control","success","alert","disabled"]),disabled:u.a.bool,active:u.a.bool,level:u.a.number,corners:u.a.number,buttonProps:u.a.object,children:u.a.any}),Tr(Nr,"defaultProps",{Animation:O,animate:!0,Highlight:vr,Frame:or,sounds:{},show:!0,corners:1,layer:"control",level:2});var Ar=i((function(e){return{root:{display:"inline-block",position:"relative",lineHeight:1,verticalAlign:"middle"},button:{position:"relative",zIndex:2,display:"inline-block",margin:0,border:"none",padding:[e.padding/2,e.padding],background:"transparent",color:function(t){return e.color[t.disabled?"disabled":t.layer].base},fontSize:.75*e.typography.fontSize,lineHeight:1,verticalAlign:"middle",transition:"all ".concat(e.animTime,"ms ease-out"),userSelect:"none",outline:"none",cursor:function(e){return e.disabled?"auto":"pointer"},"&:focus":{outline:"none"},"& .mdi, & .icon":{lineHeight:0,fontSize:"140%",verticalAlign:"middle"}}}}),{injectTheme:!0})(qe()(Nr)),qr=["theme","classes","Animation","animation","animate","show","layer","className"];function _r(){return(_r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function Dr(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r={};for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){if(t.indexOf(n)>=0)continue;r[n]=e[n]}return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function Cr(e){var t=e.theme,r=e.classes,n=e.Animation,o=e.animation,i=e.animate,a=e.show,l=(e.layer,e.className),u=Dr(e,qr),s=f()(r.root,l);return c.a.createElement(n,_r({animate:i,show:a,timeout:t.animTime},o),(function(e){return c.a.createElement("div",_r({className:f()(s,r[e.status])},u),c.a.createElement("div",{className:r.line}),c.a.createElement("div",{className:r.left}),c.a.createElement("div",{className:r.right}))}))}Cr.propTypes={Animation:u.a.any.isRequired,theme:u.a.any.isRequired,classes:u.a.any.isRequired,animate:u.a.bool,show:u.a.bool,animation:u.a.object,layer:u.a.oneOf(["primary","secondary","header","control","success","alert","disabled"])},Cr.defaultProps={Animation:O,animate:!0,show:!0,layer:"primary"};var zr=i((function(e){return{root:{position:"relative",display:"block",margin:[0,0,e.margin],width:"100%",height:1,"&$exiting, &$exited":{"& $line":{width:"0%"},"& $left, & $right":{opacity:0}}},line:{position:"absolute",top:0,left:"50%",transform:"translateX(-50%)",width:"100%",display:"block",borderStyle:"solid",borderColor:function(t){return e.color[t.layer].dark},borderWidth:"0 0 1px",transition:"all ".concat(e.animTime,"ms ease-out")},left:{position:"absolute",left:0,top:-1,display:"block",width:3,height:3,background:function(t){return e.color[t.layer].dark},opacity:1,transition:"all ".concat(e.animTime/4*3,"ms ease-out ").concat(e.animTime/4,"ms")},right:{position:"absolute",top:-1,right:0,display:"block",width:3,height:3,background:function(t){return e.color[t.layer].dark},opacity:1,transition:"all ".concat(e.animTime/4*3,"ms ease-out ").concat(e.animTime/4,"ms")},entering:{},entered:{},exiting:{},exited:{}}}),{injectTheme:!0})(Cr);function Lr(e){return(Lr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var $r=["theme","classes","animation","Animation","animate","show","layer","small","full","className"];function Ir(){return(Ir=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function Br(e,t,r){var n;return n=function(e,t){if("object"!=Lr(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=Lr(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(t,"string"),(t="symbol"==Lr(n)?n:n+"")in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Fr(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r={};for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){if(t.indexOf(n)>=0)continue;r[n]=e[n]}return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function Mr(e){var t=e.theme,r=e.classes,n=e.animation,o=e.Animation,i=e.animate,a=e.show,l=(e.layer,e.small),u=e.full,s=e.className,p=Fr(e,$r),m=f()(r.root,Br(Br({},r.isSmall,l),r.isFull,u),s);return c.a.createElement(o,Ir({animate:i,show:a,timeout:t.animTime},n),(function(e){return c.a.createElement("div",Ir({className:f()(m,r[e.status])},p),!l&&c.a.createElement("div",{className:f()(r.circle,r.circle1)}),c.a.createElement("div",{className:f()(r.circle,r.circle2)}))}))}Mr.propTypes={Animation:u.a.any.isRequired,theme:u.a.any.isRequired,classes:u.a.any.isRequired,animate:u.a.bool,show:u.a.bool,animation:u.a.object,layer:u.a.oneOf(["primary","secondary","header","control","success","alert","disabled"]),small:u.a.bool,full:u.a.bool},Mr.defaultProps={Animation:O,animate:!0,show:!0,layer:"primary"};var Wr=i((function(e){return{root:{zIndex:1e3,position:"relative",display:"block",minHeight:50+2*e.padding,transition:"all ".concat(e.animTime,"ms ease-out"),opacity:1,"&$exiting, &$exited":{opacity:0}},circle:{position:"absolute",left:"50%",top:"50%",display:"block",borderTop:function(t){return"5px solid "+e.color[t.layer].base},borderBottom:function(t){return"5px solid "+e.color[t.layer].base},borderLeft:"5px solid transparent",borderRight:"5px solid transparent",borderRadius:"50%",backgroundColor:"transparent",boxShadow:function(t){return"0 0 ".concat(2*e.shadowLength,"px ").concat(e.color[t.layer].base)},transition:"all ".concat(e.animTime,"ms ease-out")},circle1:{marginLeft:-25,marginTop:-25,width:50,height:50,animation:"$arwes-loading-circle1 ".concat(3*e.animTime,"ms infinite linear")},circle2:{marginLeft:-15,marginTop:-15,width:30,height:30,animation:"$arwes-loading-circle2 ".concat(3*e.animTime,"ms infinite linear")},isSmall:{display:"inline-block",minWidth:16,minHeight:16,verticalAlign:"middle","& $circle2":{marginLeft:-8,marginTop:-8,width:16,height:16,borderTop:function(t){return"3px solid "+e.color[t.layer].base},borderBottom:function(t){return"3px solid "+e.color[t.layer].base},borderLeft:"3px solid transparent",borderRight:"3px solid transparent"}},isFull:{position:"absolute",left:0,right:0,top:0,bottom:0},entering:{},entered:{},exiting:{},exited:{},"@keyframes arwes-loading-circle1":{"0%":{transform:"rotate(160deg)",opacity:0},"50%":{transform:"rotate(145deg)",opacity:1},"100%":{transform:"rotate(-320deg)",opacity:0}},"@keyframes arwes-loading-circle2":{"0%":{transform:"rotate(0deg)"},"100%":{transform:"rotate(360deg)"}}}}),{injectTheme:!0})(Mr),Hr=["Animation","Frame","Loading","createLoader","createResponsive","animation","theme","classes","animate","show","layer","loadResources","resources","imgProps","i18n","className","children"];function Ur(e){return(Ur="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Gr(){return(Gr=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function Xr(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r={};for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){if(t.indexOf(n)>=0)continue;r[n]=e[n]}return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function Yr(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Vr(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,en(n.key),n)}}function Jr(e,t,r){return t=Kr(t),function(e,t){if(t&&("object"===Ur(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,function(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return function(){return!!e}()}()?Reflect.construct(t,r||[],Kr(e).constructor):t.apply(e,r))}function Kr(e){return(Kr=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Qr(e,t){return(Qr=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function Zr(e,t,r){return(t=en(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function en(e){var t=function(e,t){if("object"!=Ur(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=Ur(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==Ur(t)?t:t+""}var tn=function(e){function t(){var e;return Yr(this,t),(e=Jr(this,t,arguments)).state=e.getDefaultState(),e.loader=e.props.createLoader(),e.responsive=e.props.createResponsive({getTheme:function(){return e.props.theme}}),e}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Qr(e,t)}(t,e),r=t,(n=[{key:"getDefaultState",value:function(){return{ready:!1,error:!1,resource:null}}},{key:"componentDidMount",value:function(){this.loadResource()}},{key:"componentDidUpdate",value:function(e){this.props.resources!==e.resources&&this.loadResource()}},{key:"render",value:function(){var e=this.props,t=e.Animation,r=e.Frame,n=e.Loading,o=(e.createLoader,e.createResponsive,e.animation),i=e.theme,a=e.classes,l=e.animate,u=e.show,s=e.layer,p=(e.loadResources,e.resources,e.imgProps),m=e.i18n,y=e.className,b=e.children,d=Xr(e,Hr),h=this.state,v=h.ready,g=h.error,O=h.resource,w=f()(a.root,Zr({},a.ready,v),y);return c.a.createElement(t,Gr({animate:l,show:u,timeout:i.animTime},o),(function(e){return c.a.createElement("figure",Gr({className:f()(w,a[e.status])},d),c.a.createElement(r,{animate:l,show:u,layer:s},c.a.createElement("div",{className:a.holder},c.a.createElement("img",Gr({},p,{className:f()(a.img,p.className),src:O})),g&&c.a.createElement("div",{className:a.error},m.error),!v&&!g&&c.a.createElement(n,{full:!0,animate:l,show:u,layer:s})),!!b&&c.a.createElement("div",{className:a.separator}),!!b&&c.a.createElement("figcaption",{className:a.children},c.a.createElement("small",null,"function"==typeof b?b(e):b))))}))}},{key:"loadResource",value:function(){var e=this,t=this.props,r=t.resources;if(t.loadResources){var n=this.responsive.get(),o=z(r,n);this.setState(this.getDefaultState()),this.loader.load({images:[o]}).then((function(){e.setState({ready:!0,resource:o})}),(function(){e.setState({error:!0})}))}}}])&&Vr(r.prototype,n),o&&Vr(r,o),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,n,o}(a.Component);Zr(tn,"propTypes",{Animation:u.a.any.isRequired,Frame:u.a.any.isRequired,Loading:u.a.any.isRequired,createLoader:u.a.any.isRequired,createResponsive:u.a.any.isRequired,theme:u.a.any.isRequired,classes:u.a.any.isRequired,animate:u.a.bool,show:u.a.bool,animation:u.a.object,layer:u.a.oneOf(["primary","secondary","header","control","success","alert","disabled"]),loadResources:u.a.bool,resources:u.a.oneOfType([u.a.string,u.a.shape({small:u.a.string.isRequired,medium:u.a.string.isRequired,large:u.a.string.isRequired,xlarge:u.a.string.isRequired})]).isRequired,i18n:u.a.shape({error:u.a.string}),imgProps:u.a.object,children:u.a.any}),Zr(tn,"defaultProps",{Animation:O,animate:!0,Frame:or,Loading:Wr,createLoader:H,createResponsive:Q,show:!0,layer:"primary",loadResources:!0,i18n:{error:"Image error"},imgProps:{}});var rn=i((function(e){return{root:{position:"relative",display:"block",margin:[0,0,e.margin],width:"100%",minHeight:1,verticalAlign:"middle","&$exiting, &$exited":{"& $separator":{width:0},"& $img, & $children":{opacity:0}}},holder:{position:"relative",display:"flex",flexDirection:"column",transition:"all ".concat(e.animTime,"ms ease-out"),minHeight:200},img:{display:"block",border:"none",margin:0,padding:0,width:"100%",height:"auto",verticalAlign:"top",boxShadow:"none",transition:"all ".concat(e.animTime,"ms ease-in"),opacity:0},error:{display:"block",margin:"auto",textAlign:"center",color:e.color.alert.base},separator:{position:"absolute",top:"auto",left:"50%",transform:"translateX(-50%)",display:"block",width:"100%",borderStyle:"solid",borderColor:function(t){return Object(_.rgba)(e.color[t.layer].dark,e.alpha/2)},borderWidth:"0 0 1px",transition:"all ".concat(e.animTime,"ms ease-in")},children:{display:"block",margin:0,padding:e.padding/2,textAlign:"center",backgroundColor:function(t){return e.background[t.layer].level1},color:function(t){return e.color[t.layer].dark},transition:"opacity ".concat(e.animTime,"ms ease-in"),opacity:1},ready:{"& $holder":{minHeight:"auto"},"& $img":{opacity:1}},entering:{},entered:{},exiting:{},exited:{}}}),{injectTheme:!0})(tn),nn=(r(11),["Animation","animation","theme","classes","animate","show","type","language","className","children"]);function on(e){return(on="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function an(){return(an=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function cn(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r={};for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){if(t.indexOf(n)>=0)continue;r[n]=e[n]}return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function ln(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function un(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,yn(n.key),n)}}function sn(e,t,r){return t=fn(t),function(e,t){if(t&&("object"===on(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,function(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return function(){return!!e}()}()?Reflect.construct(t,r||[],fn(e).constructor):t.apply(e,r))}function fn(e){return(fn=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function pn(e,t){return(pn=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function mn(e,t,r){return(t=yn(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function yn(e){var t=function(e,t){if("object"!=on(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=on(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==on(t)?t:t+""}var bn=function(e){function t(){return ln(this,t),sn(this,t,arguments)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&pn(e,t)}(t,e),r=t,(n=[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var e=this,t=this.props,r=t.Animation,n=t.animation,o=t.theme,i=t.classes,a=t.animate,l=t.show,u=t.type,s=t.language,p=t.className,m=t.children,y=cn(t,nn),b=f()(i.root,p);return c.a.createElement(r,an({animate:a,show:l,timeout:o.animTime},n),(function(t){return c.a.createElement(u,an({className:f()(b,i[t.status],"language-"+s)},y,{ref:function(t){return e.wrapper=t}}),m)}))}},{key:"highlight",value:function(){Prism.highlightElement(this.wrapper)}}])&&un(r.prototype,n),o&&un(r,o),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,n,o}(a.Component);function dn(e){return(dn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function hn(e,t,r){var n;return n=function(e,t){if("object"!=dn(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=dn(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(t,"string"),(t="symbol"==dn(n)?n:n+"")in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}mn(bn,"propTypes",{Animation:u.a.any.isRequired,theme:u.a.any.isRequired,classes:u.a.any.isRequired,animate:u.a.bool,show:u.a.bool,animation:u.a.object,type:u.a.oneOf(["code","pre"]),language:u.a.string}),mn(bn,"defaultProps",{Animation:O,animate:!0,show:!0,type:"code",language:"javascript"});var vn=i((function(e){var t;return{root:(t={display:"inline-block",verticalAlign:"middle",fontFamily:e.code.fontFamily,fontSize:e.code.fontSize,lineHeight:"1.375",direction:"ltr",textAlign:"left",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",mozTabSize:"2",oTabSize:"2",tabSize:"2",webkitHyphens:"none",mozHyphens:"none",msHyphens:"none",hyphens:"none",background:Object(_.rgba)(e.code.background,e.alpha),color:e.code.color,transition:"all ".concat(e.animTime,"ms ease-out"),opacity:1,"&$exiting, &$exited":{opacity:0},"pre&":{display:"block",margin:[0,0,e.margin],padding:e.padding/2,verticalAlign:"top",overflow:"auto"}},hn(hn(hn(hn(hn(hn(hn(hn(hn(hn(t,"& .token.comment,\n        & .token.prolog,\n        & .token.doctype,\n        & .token.cdata,\n        & .token.punctuation",{color:e.code.comment}),"& .token.punctuation",{opacity:1}),"& .token.tag,\n        & .token.operator",{color:e.code.operator}),"& .token.property,\n        & .token.function",{color:e.code.function}),"& .token.tag-id,\n        & .token.selector,\n        & .token.atrule-id",{color:e.code.selector}),"&.language-css,\n        &.language-scss,\n        & .token.boolean,\n        & .token.string,\n        & .token.number,\n        & .token.entity,\n        & .token.url,\n        & .language-css .token.string,\n        & .language-scss .token.string,\n        & .style .token.string,\n        & .token.attr-value,\n        & .token.keyword,\n        & .token.control,\n        & .token.directive,\n        & .token.unit,\n        & .token.statement,\n        & .token.regex,\n        & .token.atrule",{color:e.code.value}),"& .token.atrule,\n        & .token.attr-value,\n        & .token.keyword",{color:e.code.keyword}),"& .token.placeholder,\n        & .token.attr-name,\n        & .token.variable",{color:e.code.variable}),"& .token.deleted",{textDecoration:"line-through"}),"& .token.italic",{fontStyle:"italic"}),hn(hn(hn(t,"& .token.important,\n        & .token.bold",{fontWeight:"bold"}),"& .token.regex,\n        & .token.important",{color:e.code.operator}),"& .token.entity",{cursor:"help"})),entering:{},entered:{},exiting:{},exited:{}}}),{injectTheme:!0})(bn),gn=["theme","classes","Animation","animation","animate","show","headers","dataset","minWidth","className","children"];function On(){return(On=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function wn(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r={};for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){if(t.indexOf(n)>=0)continue;r[n]=e[n]}return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function jn(e){var t=e.theme,r=e.classes,n=e.Animation,o=e.animation,i=e.animate,a=e.show,l=e.headers,u=e.dataset,s=e.minWidth,p=e.className,m=e.children,y=wn(e,gn),b=f()(r.root,p);return c.a.createElement(n,On({animate:i,show:a,timeout:t.animTime},o),(function(e){return c.a.createElement("div",On({className:f()(b,r[e.status])},y),c.a.createElement("div",{style:{minWidth:s}},!m&&c.a.createElement("table",null,c.a.createElement("thead",null,c.a.createElement("tr",null,l.map((function(e,t){return c.a.createElement("th",{key:t},e)})))),c.a.createElement("tbody",null,u.filter((function(e){return!!e})).map((function(e,t){return c.a.createElement("tr",{key:t},e.map((function(e,t){return c.a.createElement("td",{key:t},e)})))})))),m))}))}jn.propTypes={Animation:u.a.any.isRequired,theme:u.a.any.isRequired,classes:u.a.any.isRequired,animate:u.a.bool,show:u.a.bool,animation:u.a.object,headers:u.a.array,dataset:u.a.arrayOf(u.a.array),minWidth:u.a.oneOfType([u.a.number,u.a.string]),children:u.a.any},jn.defaultProps={Animation:O,animate:!0,show:!0,headers:[],dataset:[]};var Pn=i((function(e){return{root:{display:"block",overflowX:"auto",margin:[0,0,e.margin],fontSize:"80%",transition:"all ".concat(e.animTime,"ms ease-out"),opacity:1,"&$exiting, &$exited":{opacity:0},"& table":{width:"100%",borderCollapse:"collapse"},"& thead":{textAlign:"left",fontFamily:e.typography.headerFontFamily,fontWeight:"bold",color:e.color.header.base,whiteSpace:"nowrap"},"& tbody":{"& p, & ul, & ol, & dl, & blockquote":{marginBottom:0}},"& tr":{borderBottom:"1px solid "+Object(_.rgba)(e.color.primary.dark,e.alpha/2)},"& th":{padding:e.padding/4,verticalAlign:"top"},"& td":{padding:e.padding/4,verticalAlign:"top"}},entering:{},entered:{},exiting:{},exited:{}}}),{injectTheme:!0})(jn);function Sn(e){return(Sn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var kn=["theme","classes","sounds","Animation","className","Frame","Heading","animation","animate","show","node","corners","header","headerSize","icon","children","Words"];function xn(){return(xn=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function En(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Tn(e,t,r){var n;return n=function(e,t){if("object"!=Sn(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=Sn(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(t,"string"),(t="symbol"==Sn(n)?n:n+"")in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Rn(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r={};for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){if(t.indexOf(n)>=0)continue;r[n]=e[n]}return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function Nn(e){var t=e.theme,r=e.classes,n=(e.sounds,e.Animation),o=e.className,i=e.Frame,a=e.Heading,l=e.animation,u=e.animate,s=e.show,p=e.node,m=e.corners,y=e.header,b=(e.headerSize,e.icon),d=e.children,h=e.Words,v=Rn(e,kn),g=f()(r.root,o);return c.a.createElement(n,xn({animate:u,show:s,timeout:t.animTime},l),(function(e){return c.a.createElement(p,function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?En(Object(r),!0).forEach((function(t){Tn(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):En(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({className:f()(g,r[e.status])},v),c.a.createElement(i,{animate:u,show:s,timeout:t.animTime,layer:"primary",level:0,corners:m,hover:!0,noBackground:!0},(function(e){return c.a.createElement("div",null,c.a.createElement("header",{className:r.header},c.a.createElement(a,{node:"h1"},c.a.createElement(h,{animate:u,show:e.entered},y)),c.a.createElement("div",{className:r.icon},b)),c.a.createElement("div",{className:r.separator}),c.a.createElement("div",{className:"children-container "+r.children},"function"==typeof d?d(e):d))})))}))}Nn.propTypes={Animation:u.a.any.isRequired,Frame:u.a.any.isRequired,Words:u.a.any.isRequired,Heading:u.a.any.isRequired,theme:u.a.any.isRequired,classes:u.a.any.isRequired,animate:u.a.bool,show:u.a.bool,animation:u.a.object,sounds:u.a.object,node:u.a.string,header:u.a.string.isRequired,headerSize:u.a.oneOf(["h1","h2","h3","h4","h5","h6"]),icon:u.a.any,corners:u.a.oneOf([0,1,2,3,4,5,6]),children:u.a.any},Nn.defaultProps={Animation:O,animate:!0,Frame:or,Words:Ue,Heading:nt,corners:4,show:!0,sounds:{},node:"article",headerSize:"h2",icon:c.a.createElement("i",{className:"mdi mdi-package"})};var An=i((function(e){return{root:{display:"block",verticalAlign:"middle","&$exiting, &$exited":{"& $header, & $children":{backgroundColor:"transparent"},"& $icon":{opacity:0},"& $separator":{width:0}},"&:hover":{"& $separator":{borderColor:e.color.primary.base,boxShadow:"0 0 ".concat(e.shadowLength,"px ")+Object(_.rgba)(e.color.primary.base,e.alpha)}}},header:{position:"relative",padding:[e.padding,3*e.padding,e.padding,e.padding],transition:"all ".concat(e.animTime,"ms ease-out"),backgroundColor:Object(_.rgba)(e.background.primary.level1,e.alpha),"& h1, & h2, & h3, & h4, & h5, & h6":{margin:0,fontSize:function(t){return e.typography.headerSizes[t.headerSize]}}},separator:{position:"absolute",top:"auto",left:"50%",transform:"translateX(-50%)",display:"block",width:"100%",borderStyle:"solid",borderColor:e.color.primary.dark,borderWidth:"0 0 1px",transition:"all ".concat(e.animTime,"ms ease-in")},icon:{position:"absolute",right:e.margin,top:"50%",transform:"translateY(-50%)",fontSize:function(t){return e.typography.headerSizes[t.headerSize]},color:e.color.header.base,textShadow:"0 0 ".concat(e.shadowLength,"px ")+Object(_.rgba)(e.color.header.base,e.alpha),transition:"all ".concat(e.animTime,"ms ease-out"),opacity:1},children:{transition:"all ".concat(e.animTime,"ms ease-out"),backgroundColor:Object(_.rgba)(e.background.primary.level0,e.alpha),padding:e.padding,"& p, & ul, & ol, & dl, & blockquote":{margin:0}},entering:{},entered:{},exiting:{},exited:{}}}),{injectTheme:!0})(qe()(Nn)),qn=["theme","classes","Animation","animation","inverseSeparator","sounds","animate","show","className","children"];function _n(e){return(_n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Dn(){return(Dn=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function Cn(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r={};for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){if(t.indexOf(n)>=0)continue;r[n]=e[n]}return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function zn(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Ln(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,Mn(n.key),n)}}function $n(e,t,r){return t=In(t),function(e,t){if(t&&("object"===_n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,function(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return function(){return!!e}()}()?Reflect.construct(t,r||[],In(e).constructor):t.apply(e,r))}function In(e){return(In=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Bn(e,t){return(Bn=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function Fn(e,t,r){return(t=Mn(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Mn(e){var t=function(e,t){if("object"!=_n(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=_n(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==_n(t)?t:t+""}var Wn=function(e){function t(){return zn(this,t),$n(this,t,arguments)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Bn(e,t)}(t,e),r=t,(n=[{key:"componentDidMount",value:function(){var e,t=this.props,r=t.animate,n=t.show,o=t.sounds;r&&n&&(null===(e=o.deploy)||void 0===e||e.play())}},{key:"componentDidUpdate",value:function(e){var t,r=this.props,n=r.animate,o=r.show,i=r.sounds;n&&e.show!==o&&(null===(t=i.deploy)||void 0===t||t.play())}},{key:"componentWillUnmount",value:function(){var e,t=this.props,r=t.animate,n=t.sounds;r&&(null===(e=n.deploy)||void 0===e||e.stop())}},{key:"render",value:function(){var e=this.props,t=e.theme,r=e.classes,n=e.Animation,o=e.animation,i=e.inverseSeparator,a=(e.sounds,e.animate),l=e.show,u=e.className,s=e.children,p=Cn(e,qn),m=f()(r.root,u);return c.a.createElement(n,Dn({animate:a,show:l,timeout:t.animTime},o),(function(e){return c.a.createElement("header",Dn({className:f()(m,r[e.status])},p),i&&c.a.createElement("div",{className:r.separator}),c.a.createElement("div",{className:r.children},"function"==typeof s?s(e):s),!i&&c.a.createElement("div",{className:r.separator}))}))}}])&&Ln(r.prototype,n),o&&Ln(r,o),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,n,o}(a.Component);Fn(Wn,"propTypes",{Animation:u.a.any.isRequired,theme:u.a.any.isRequired,classes:u.a.any.isRequired,animate:u.a.bool,show:u.a.bool,animation:u.a.object,inverseSeparator:u.a.bool,sounds:u.a.object,children:u.a.any}),Fn(Wn,"defaultProps",{Animation:O,animate:!0,sounds:{},show:!0,inverseSeparator:!1});var Hn=i((function(e){return{root:{display:"flex",position:"relative",backgroundColor:Object(_.rgba)(e.background.primary.level0,e.alpha),paddingBottom:4,"&$exiting, &$exited":{backgroundColor:"transparent","& $separator":{width:0}}},separator:{position:"absolute",bottom:0,left:"50%",transform:"translateX(-50%)",display:"block",width:"100%",borderStyle:"solid",borderColor:e.color.primary.dark,borderWidth:"0 0 4px",transition:"all ".concat(e.animTime,"ms ease-in")},children:{display:"inherit",width:"inherit"},entering:{},entered:{},exiting:{},exited:{}}}),{injectTheme:!0})(qe()(Wn)),Un=["theme","classes","Animation","animation","sounds","animate","show","className","children"];function Gn(e){return(Gn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Xn(){return(Xn=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function Yn(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r={};for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){if(t.indexOf(n)>=0)continue;r[n]=e[n]}return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function Vn(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Jn(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,to(n.key),n)}}function Kn(e,t,r){return t=Qn(t),function(e,t){if(t&&("object"===Gn(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,function(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return function(){return!!e}()}()?Reflect.construct(t,r||[],Qn(e).constructor):t.apply(e,r))}function Qn(e){return(Qn=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Zn(e,t){return(Zn=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function eo(e,t,r){return(t=to(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function to(e){var t=function(e,t){if("object"!=Gn(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=Gn(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==Gn(t)?t:t+""}var ro=function(e){function t(){return Vn(this,t),Kn(this,t,arguments)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Zn(e,t)}(t,e),r=t,(n=[{key:"componentDidMount",value:function(){var e,t=this.props,r=t.animate,n=t.show,o=t.sounds;r&&n&&(null===(e=o.deploy)||void 0===e||e.play())}},{key:"componentDidUpdate",value:function(e){var t,r=this.props,n=r.animate,o=r.show,i=r.sounds;n&&e.show!==o&&(null===(t=i.deploy)||void 0===t||t.play())}},{key:"componentWillUnmount",value:function(){var e,t=this.props,r=t.animate,n=t.sounds;r&&(null===(e=n.deploy)||void 0===e||e.stop())}},{key:"render",value:function(){var e=this.props,t=e.theme,r=e.classes,n=e.Animation,o=e.animation,i=(e.sounds,e.animate),a=e.show,l=e.className,u=e.children,s=Yn(e,Un),p=f()(r.root,l);return c.a.createElement(n,Xn({animate:i,show:a,timeout:t.animTime},o),(function(e){return c.a.createElement("footer",Xn({className:f()(p,r[e.status])},s),c.a.createElement("div",{className:r.separator}),c.a.createElement("div",{className:r.children},"function"==typeof u?u(e):u))}))}}])&&Jn(r.prototype,n),o&&Jn(r,o),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,n,o}(a.Component);eo(ro,"propTypes",{Animation:u.a.any.isRequired,theme:u.a.any.isRequired,classes:u.a.any.isRequired,animate:u.a.bool,show:u.a.bool,animation:u.a.object,sounds:u.a.object,children:u.a.any}),eo(ro,"defaultProps",{Animation:O,animate:!0,sounds:{},show:!0});var no=i((function(e){return{root:{display:"block",position:"relative",backgroundColor:Object(_.rgba)(e.background.primary.level0,e.alpha),"&$exiting, &$exited":{backgroundColor:"transparent","& $separator":{width:0}}},separator:{position:"absolute",top:"auto",left:"50%",transform:"translateX(-50%)",display:"block",width:"100%",borderStyle:"solid",borderColor:e.color.primary.dark,borderWidth:"0 0 1px",transition:"all ".concat(e.animTime,"ms ease-in")},children:{display:"block"},entering:{},entered:{},exiting:{},exited:{}}}),{injectTheme:!0})(qe()(ro));function oo(e){return(oo="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var io=["theme","classes","row","nested","noGutter","noMargin","col","s","m","l","xl","offset","className","children"];function ao(){return(ao=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function co(e,t,r){var n;return n=function(e,t){if("object"!=oo(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=oo(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(t,"string"),(t="symbol"==oo(n)?n:n+"")in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function lo(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r={};for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){if(t.indexOf(n)>=0)continue;r[n]=e[n]}return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function uo(e){e.theme;var t=e.classes,r=e.row,n=e.nested,o=e.noGutter,i=e.noMargin,a=e.col,l=e.s,u=e.m,s=e.l,p=e.xl,m=e.offset,y=e.className,b=e.children,d=lo(e,io),h=!r&&a,v=r&&a,g=r?t.row:t.col,O=co(co(co(co(co({},t.noGutter,o),t["s"+l],l),t["m"+u],u),t["l"+s],s),t["xl"+p],p);m.forEach((function(e){O[t["offset-"+e]]=!0}));var w=f()(g,i&&[t.noMargin],n&&[t.nested],h&&O,y);return c.a.createElement("div",ao({className:w},d),v?c.a.createElement("div",{className:f()(t.col,O)},b):b)}function so(e){return(so="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function fo(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function po(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?fo(Object(r),!0).forEach((function(t){mo(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):fo(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function mo(e,t,r){var n;return n=function(e,t){if("object"!=so(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=so(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(t,"string"),(t="symbol"==so(n)?n:n+"")in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}uo.propTypes={theme:u.a.any.isRequired,classes:u.a.any.isRequired,row:u.a.bool,nested:u.a.bool,noMargin:u.a.bool,col:u.a.bool,noGutter:u.a.bool,s:u.a.number,m:u.a.number,l:u.a.number,xl:u.a.number,offset:u.a.arrayOf(u.a.string)},uo.defaultProps={offset:[]};var yo=function(e){return{width:e,marginLeft:"auto",left:"auto",right:"auto"}},bo=function(e,t){for(var r,n={},o=1;o<=e.columns;o++)r=100/(e.columns/o)+"%",n=po(po({},n),{},mo({},t+o,yo(r)));return n},ho=function(e,t){for(var r,n={},o=1;o<=e.columns;o++)r=100/(e.columns/o)+"%",n=po(po({},n),{},mo({},"offset-".concat(t).concat(o),{marginLeft:r}));return n};function vo(){return(vo=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}var go=i((function(e){return po(po(po({row:{marginLeft:"auto",marginRight:"auto",marginBottom:e.margin,"&:after":{content:'""',display:"table",clear:"both"}},nested:{marginLeft:-e.margin/2,marginRight:-e.margin/2},noMargin:{marginBottom:0},col:{float:"left",boxSizing:"border-box",padding:"0 ".concat(e.margin/2,"px"),minHeight:1},noGutter:{padding:0}},bo(e,"s")),ho(e,"s")),{},mo(mo(mo({},"@media screen and (min-width: ".concat(e.responsive.small+1,"px)"),po(po({},bo(e,"m")),ho(e,"m"))),"@media screen and (min-width: ".concat(e.responsive.medium+1,"px)"),po(po({},bo(e,"l")),ho(e,"l"))),"@media screen and (min-width: ".concat(e.responsive.large+1,"px)"),po(po({},bo(e,"xl")),ho(e,"xl"))))}),{injectTheme:!0})(uo),Oo=function(e){return c.a.createElement(go,vo({row:!0},e))},wo=function(e){return c.a.createElement(go,vo({col:!0},e))},jo=go,Po=["theme","classes","Animation","animation","animate","show","className","children"];function So(){return(So=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function ko(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r={};for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){if(t.indexOf(n)>=0)continue;r[n]=e[n]}return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function xo(e){var t=e.theme,r=e.classes,n=e.Animation,o=e.animation,i=e.animate,a=e.show,l=e.className,u=e.children,s=ko(e,Po),p=f()(r.root,l);return c.a.createElement(n,So({animate:i,show:a,timeout:t.animTime},o),(function(e){return c.a.createElement("span",So({className:f()(p,r[e.status])},s),u)}))}xo.propTypes={Animation:u.a.any.isRequired,theme:u.a.any.isRequired,classes:u.a.any.isRequired,animate:u.a.bool,show:u.a.bool,animation:u.a.object},xo.defaultProps={Animation:O,animate:!0,show:!0};var Eo=i((function(e){return{root:{display:"inline-block",opacity:1,transition:"opacity ".concat(e.animTime,"ms ease-out"),"&$exiting, &$exited":{opacity:0}},entering:{},entered:{},exiting:{},exited:{}}}),{injectTheme:!0})(xo),To=r(9),Ro=["theme","classes","Animation","animation","animate","show","size","className"];function No(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r={};for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){if(t.indexOf(n)>=0)continue;r[n]=e[n]}return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function Ao(){return(Ao=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}var qo=function(e){return e*Math.PI/180},_o=Object(To.arc)(),Do=function(e){return e.children},Co=function(e,t){for(var r=arguments.length,n=new Array(r>2?r-2:0),o=2;o<r;o++)n[o-2]=arguments[o];return c.a.createElement(Do,null,c.a.createElement("path",Ao({},n,{className:f()(t.light,t.elementFilter,n.className),d:_o(e)})),c.a.createElement("path",Ao({},n,{className:f()(t.light,n.className),d:_o(e)})))};function zo(e){var t=e.theme,r=e.classes,n=e.Animation,o=e.animation,i=e.animate,a=e.show,l=e.size,u=e.className,s=No(e,Ro),p=f()(r.root,u);return c.a.createElement(n,Ao({animate:i,show:a,timeout:t.animTime},o),(function(e){return c.a.createElement("svg",Ao({className:f()(p,r[e.status]),width:l,height:l,viewBox:"0 0 1000 1000",version:"1.1"},s),c.a.createElement("filter",{id:"arwes-logo-filter-blur"},c.a.createElement("feGaussianBlur",{in:"SourceGraphic",stdDeviation:"20"})),c.a.createElement("g",{style:{transform:"translate(500px,500px)"}},c.a.createElement("circle",{className:f()(r.light,r.elementFilter),cx:"0",cy:"0",r:"85"}),c.a.createElement("circle",{className:r.light,cx:"0",cy:"0",r:"85"}),c.a.createElement("path",{className:r.center,d:_o({innerRadius:200,outerRadius:275,startAngle:0,endAngle:qo(360)})}),c.a.createElement("path",{className:r.outer,d:_o({innerRadius:375,outerRadius:475,startAngle:0,endAngle:qo(360)})}),Co({innerRadius:375,outerRadius:475,startAngle:qo(15),endAngle:qo(105)},r),Co({innerRadius:375,outerRadius:475,startAngle:qo(135),endAngle:qo(225)},r),Co({innerRadius:375,outerRadius:475,startAngle:qo(255),endAngle:qo(345)},r)))}))}zo.propTypes={Animation:u.a.any.isRequired,theme:u.a.any.isRequired,classes:u.a.any.isRequired,animate:u.a.bool,show:u.a.bool,animation:u.a.object,layer:u.a.oneOf(["primary","secondary","header","control","success","alert","disabled"]),size:u.a.number},zo.defaultProps={Animation:O,animate:!0,show:!0,layer:"primary",size:100};var Lo=i((function(e){return{root:{display:"inline-block",verticalAlign:"middle",transition:"opacity ".concat(e.animTime,"ms ease-out"),animation:function(t){return t.animate?"$arwes-logo-rotate ".concat(200*e.animTime,"ms infinite linear"):""},opacity:1,"&$exiting, &$exited":{opacity:0}},light:{fill:function(t){return e.color[t.layer].base}},center:{fill:function(t){return Object(_.rgba)(e.color[t.layer].base,.5)}},outer:{fill:function(t){return Object(_.rgba)(e.color[t.layer].base,.2)}},elementFilter:{filter:"url(#arwes-logo-filter-blur)"},entering:{},entered:{},exiting:{},exited:{},"@keyframes arwes-logo-rotate":{"0%":{transform:"rotate(0deg)"},"100%":{transform:"rotate(360deg)"}}}}),{injectTheme:!0})(zo),$o=o.ThemeProvider,Io=r(6),Bo=r.n(Io),Fo=function(e){return{base:e,light:Object(_.lighten)(.2,e),dark:Object(_.darken)(.2,e)}},Mo=function(e){return{level0:e,level1:Object(_.lighten)(.015,e),level2:Object(_.lighten)(.03,e),level3:Object(_.lighten)(.045,e)}},Wo={margin:20,padding:20,shadowLength:4,animTime:250,alpha:.65,accent:.2,color:{primary:Fo("#26dafd"),secondary:Fo("#df9527"),header:Fo("#a1ecfb"),control:Fo("#acf9fb"),success:Fo("#00ff00"),alert:Fo("#ff0000"),disabled:Fo("#999999")},background:{primary:Mo("#021114"),secondary:Mo("#180f02"),header:Mo("#032026"),control:Mo("#041e1f"),success:Mo("#081402"),alert:Mo("#140202"),disabled:Mo("#141414")},typography:{lineHeight:1.5,headerSizes:{h1:28,h2:24,h3:21,h4:18,h5:16,h6:16},fontSize:21,headerFontFamily:'"Electrolize", "sans-serif"',fontFamily:'"Titillium Web", "sans-serif"'},code:{fontSize:14,fontFamily:'Monaco, "Bitstream Vera Sans Mono", "Lucida Console", Terminal, monospace',background:"#000000",color:"#3aafff",comment:"#4a5f78",keyword:"#bB7Dbf",operator:"#0075e8",function:"#8b6ccf",variable:"#3aafff",selector:"#3aafff",value:"#05d48e"},columns:12,responsive:{small:600,medium:992,large:1200}},Ho=function(e){return Bo()(!0,{},Wo,e)},Uo=r(10),Go=r.n(Uo);function Xo(e){return(Xo="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Yo(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Vo(e,t,r){var n;return n=function(e,t){if("object"!=Xo(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=Xo(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(t,"string"),(t="symbol"==Xo(n)?n:n+"")in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var Jo=function(e,t){var r=function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Yo(Object(r),!0).forEach((function(t){Vo(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Yo(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({Howl:Go.a.Howl},e),n=t||{},o=n.sound,i=void 0===o?{}:o,a=n.settings,c=void 0===a?{oneAtATime:!0}:a,l=new r.Howl(i);if(c.oneAtATime){var u,s=l.play.bind(l);l.play=function(){return u&&this.stop(u),u=s.apply(void 0,arguments)}}return l};function Ko(e){return(Ko="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Qo(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Zo(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Qo(Object(r),!0).forEach((function(t){ii(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Qo(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function ei(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function ti(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,ai(n.key),n)}}function ri(e,t,r){return t=ni(t),function(e,t){if(t&&("object"===Ko(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,function(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return function(){return!!e}()}()?Reflect.construct(t,r||[],ni(e).constructor):t.apply(e,r))}function ni(e){return(ni=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function oi(e,t){return(oi=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function ii(e,t,r){return(t=ai(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function ai(e){var t=function(e,t){if("object"!=Ko(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=Ko(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==Ko(t)?t:t+""}var ci=function(e){function t(){return ei(this,t),ri(this,t,arguments)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&oi(e,t)}(t,e),r=t,(n=[{key:"getChildContext",value:function(){var e=this.props,t=e.sounds,r=e.createPlayer,n=t.shared,o=t.players,i={};return Object.keys(o).forEach((function(e){var t=o[e];t.sound=Zo(Zo({},n),t.sound),i[e]=r(null,t)})),{sounds:i}}},{key:"render",value:function(){return this.props.children}}])&&ti(r.prototype,n),o&&ti(r,o),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,n,o}(a.Component);ii(ci,"propTypes",{sounds:u.a.object.isRequired,createPlayer:u.a.any.isRequired}),ii(ci,"defaultProps",{createPlayer:Jo}),ii(ci,"childContextTypes",{sounds:u.a.object});var li={shared:{preload:!0,volume:.5},players:{}},ui=function(e){return Bo()(!0,{},li,e)},si=n}])}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,