!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.webpackNumbers=t():e.webpackNumbers=t()}(global,(function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=12)}([function(e,t){e.exports=require("prop-types")},function(e,t){e.exports=require("react")},function(e,t){e.exports=require("classnames")},function(e,t){e.exports=require("polished")},function(e,t){e.exports=require("detect-node")},function(e,t){e.exports=require("react-jss")},function(e,t){e.exports=require("extend")},function(e,t){e.exports=require("react-transition-group")},function(e,t){e.exports=require("hoist-non-react-statics")},function(e,t){e.exports=require("d3-shape")},function(e,t){e.exports=require("howler")},function(e,t){e.exports=require("prismjs")},function(e,t,n){"use strict";n.r(t),n.d(t,"Arwes",(function(){return me})),n.d(t,"Words",(function(){return $e})),n.d(t,"Heading",(function(){return Ye})),n.d(t,"Paragraph",(function(){return Ze})),n.d(t,"Link",(function(){return ot})),n.d(t,"Blockquote",(function(){return st})),n.d(t,"List",(function(){return wt})),n.d(t,"Content",(function(){return xt})),n.d(t,"Frame",(function(){return Mt})),n.d(t,"Button",(function(){return yn})),n.d(t,"Line",(function(){return vn})),n.d(t,"Loading",(function(){return kn})),n.d(t,"Image",(function(){return Ln})),n.d(t,"Code",(function(){return Jn})),n.d(t,"Table",(function(){return er})),n.d(t,"Project",(function(){return ir})),n.d(t,"Header",(function(){return gr})),n.d(t,"Footer",(function(){return Ar})),n.d(t,"Grid",(function(){return Ur})),n.d(t,"Row",(function(){return Hr})),n.d(t,"Col",(function(){return Br})),n.d(t,"Animation",(function(){return g})),n.d(t,"Appear",(function(){return Vr})),n.d(t,"Highlight",(function(){return tn})),n.d(t,"Puffs",(function(){return q})),n.d(t,"Logo",(function(){return oo})),n.d(t,"ThemeProvider",(function(){return ao})),n.d(t,"withStyles",(function(){return a})),n.d(t,"createTheme",(function(){return fo})),n.d(t,"SoundsProvider",(function(){return Ro})),n.d(t,"withSounds",(function(){return Se})),n.d(t,"createSounds",(function(){return To})),n.d(t,"createLoader",(function(){return M})),n.d(t,"createResponsive",(function(){return Y})),n.d(t,"createPlayer",(function(){return ho})),n.d(t,"utils",(function(){return Ao}));var r={};n.r(r),n.d(r,"mapProps",(function(){return D})),n.d(r,"getResponsiveResource",(function(){return _}));var o=n(5),a=n.n(o).a,i=n(1),c=n.n(i),l=n(0),s=n.n(l),u=n(2),f=n.n(u),p=n(7);function m(){return(m=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function d(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function y(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function b(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function h(e){var t=e.animate,n=e.show,r=e.appear,o=e.timeout,a=e.children,i=b(e,["animate","show","appear","timeout","children"]);return c.a.createElement(p.Transition,m({appear:!!t&&r,timeout:t?o:0,in:n},i),(function(e){return a(t?function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?d(Object(n),!0).forEach((function(t){y(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):d(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({status:e},function(e){return{entering:"entering"===e,entered:"entered"===e,exiting:"exiting"===e,exited:"exited"===e}}(e)):{status:""})}))}h.propTypes={animate:s.a.bool,show:s.a.bool,children:s.a.func.isRequired,appear:s.a.bool,timeout:s.a.oneOfType([s.a.number,s.a.shape({enter:s.a.number,exit:s.a.number})])},h.defaultProps={show:!0,animate:!1,appear:!0,timeout:0};var g=h;function v(e){return(v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function O(){return(O=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function w(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function j(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function k(e,t){return(k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function x(e,t){return!t||"object"!==v(t)&&"function"!=typeof t?S(e):t}function S(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function R(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function E(e){return(E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function T(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var A=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&k(e,t)}(i,e);var t,n,r,o,a=(t=i,function(){var e,n=E(t);if(R()){var r=E(this).constructor;e=Reflect.construct(n,arguments,r)}else e=n.apply(this,arguments);return x(this,e)});function i(){var e;j(this,i);for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return T(S(e=a.call.apply(a,[this].concat(n))),"element",null),T(S(e),"puffTimeout",null),T(S(e),"puffElementsTimeout",null),T(S(e),"onPuffs",(function(){for(var t=[],n=0;n<e.props.quantity;n++)t.push(e.createPuff());t.forEach((function(t){return e.element.appendChild(t)})),e.puffElementsTimeout=setTimeout((function(){t.forEach((function(e){return e.remove()}))}),e.props.puffInterval-100)})),e}return n=i,(r=[{key:"componentDidMount",value:function(){this.props.animate&&this.startAnimations()}},{key:"componentDidUpdate",value:function(e){e.animate!==this.props.animate&&(this.props.animate?this.startAnimations():this.stopAnimations())}},{key:"componentWillUnmount",value:function(){this.stopAnimations()}},{key:"render",value:function(){var e=this,t=this.props,n=(t.theme,t.classes),r=(t.animate,t.puffInterval,t.quantity,t.className),o=t.children,a=w(t,["theme","classes","animate","puffInterval","quantity","className","children"]),i=f()(n.root,r);return c.a.createElement("div",O({className:i,ref:function(t){return e.element=t}},a),c.a.createElement("div",{className:n.children},o))}},{key:"stopAnimations",value:function(){clearInterval(this.puffTimeout),clearTimeout(this.puffElementsTimeout)}},{key:"startAnimations",value:function(){this.onPuffs(),this.puffTimeout=setInterval(this.onPuffs,this.props.puffInterval)}},{key:"createPuff",value:function(){var e=this.props.classes,t=document.createElement("div"),n=Math.round(Math.random()),r=e.puff+(n?" "+e.puffLong:"");t.setAttribute("class",r);var o=1e3+Math.round(3e3*Math.random());t.style.animationDuration=o+"ms";var a=this.element.offsetWidth,i=this.element.offsetHeight;return t.style.left=50+Math.round(Math.random()*(a-100))+"px",t.style.top=100+Math.round(Math.random()*(i-200))+"px",t}}])&&P(n.prototype,r),o&&P(n,o),i}(i.Component);T(A,"propTypes",{theme:s.a.any.isRequired,classes:s.a.any.isRequired,animate:s.a.bool,puffInterval:s.a.number,quantity:s.a.number}),T(A,"defaultProps",{animate:!0,puffInterval:5e3,quantity:8});var N=n(3),q=a((function(e){var t=e.alpha/1.5,n=e.shadowLength,r=2*e.shadowLength;return{root:{display:"block",position:"relative"},children:{display:"block"},puff:{position:"absolute",display:"block",width:1,height:1,backgroundColor:Object(N.rgba)(e.color.primary.base,t),boxShadow:"0 0 ".concat(n,"px ").concat(n,"px ")+Object(N.rgba)(e.color.primary.base,t),borderRadius:"50%",opacity:0,animation:"arwes-puff ".concat(1e3,"ms ease-out 0ms 1")},puffLong:{boxShadow:"0 0 ".concat(r,"px ").concat(r,"px ")+Object(N.rgba)(e.color.primary.base,t),animation:"arwes-puff-1 ".concat(1e3,"ms ease-out 0ms 1")},"@keyframes arwes-puff":{"0%":{transform:"scale(0.5, 0.5) translate(0, 30px)",opacity:.25},"75%":{opacity:1},"100%":{transform:"scale(1.5, 1.5) translate(0, -30px)",opacity:0}},"@keyframes arwes-puff-1":{"0%":{transform:"scale(0.5, 0.5) translate(0, 50px)",opacity:.25},"75%":{opacity:1},"100%":{transform:"scale(1.5, 1.5) translate(0, -50px)",opacity:0}}}}),{injectTheme:!0})(A),D=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(){},n={},r=Object.keys(e||{});if(!r.length)return{};var o=r.map((function(t){return{name:t,value:e[t]}})),a=o.map((function(e){return t(e.name,e.value)}));return a.forEach((function(e){n[e.name]=e.value})),n},_=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=null;if("string"==typeof e)n=e;else if(e){var r=t.small,o=t.medium,a=t.large;n=r?e.small:o?e.medium:a?e.large:e.xlarge}return n};function C(e){return function(e){if(Array.isArray(e))return z(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return z(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return z(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function z(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function L(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function I(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var $=function(e){return new Promise((function(t,n){var r=new Image;r.onload=function(){return t()},r.onerror=r.onabort=function(){return n()},r.src=e}))},F=function(e){return new Promise((function(t,n){var r=new Audio;r.addEventListener("canplaythrough",(function(){return t()})),r.onerror=r.onabort=function(){return n()},r.src=e}))},M=function(e){var t=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?L(Object(n),!0).forEach((function(t){I(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):L(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({loadImage:$,loadSound:F},e);return{load:function(e,n){var r=e||{},o=r.images,a=void 0===o?[]:o,i=r.sounds,c=void 0===i?[]:i,l=Object.assign({timeout:3e4},n);return new Promise((function(e,n){setTimeout(n,l.timeout),Promise.all([].concat(C(a.map((function(e){return t.loadImage(e)}))),C(c.map((function(e){return t.loadSound(e)}))))).then(e,n)}))}}},W=n(4),H=n.n(W),B=function(e){var t,n=e.toLowerCase(),r=window.document,o=r.documentElement;if(void 0===window["inner"+e])t=o["client"+e];else if(window["inner"+e]!==o["client"+e]){var a=r.createElement("body");a.id="vpw-test-b",a.style.cssText="overflow:scroll";var i=r.createElement("div");i.id="vpw-test-d",i.style.cssText="position:absolute;top:-1000px",i.innerHTML="<style>@media("+n+":"+o["client"+e]+"px){body#vpw-test-b div#vpw-test-d{"+n+":7px!important}}</style>",a.appendChild(i),o.insertBefore(a,r.head),t=7===i["offset"+e]?o["client"+e]:window["inner"+e],o.removeChild(a)}else t=window["inner"+e];return t},U=function(e,t,n,r){var o=H.a?1024:B("Width"),a=H.a?768:B("Height");return o=e&&o<e?e:o,a=t&&a<t?t:a,{width:o=n&&o>n?n:o,height:a=r&&a>r?r:a}};function G(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function X(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var Y=function(e){var t=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?G(Object(n),!0).forEach((function(t){X(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):G(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({getTheme:function(){return{}},getDimensions:U},e);return{get:function(){var e=t.getTheme(),n=t.getDimensions().width,r=e.responsive,o=r.small,a=r.medium,i=r.large;return n<=o?{small:!0,status:"small"}:n<=a?{medium:!0,status:"medium"}:n<=i?{large:!0,status:"large"}:{xlarge:!0,status:"xlarge"}},on:function(e){var t=this,n=this.get().status,r=function(){var r=t.get();r.status!==n&&(e(r),n=r.status)};return H.a||window.addEventListener("resize",r,!1),r},off:function(e){H.a||window.removeEventListener("resize",e,!1)}}};function V(e){return(V="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function J(){return(J=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function K(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function Q(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Z(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function ee(e,t){return(ee=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function te(e,t){return!t||"object"!==V(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ne(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function re(e){return(re=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function oe(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var ae=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&ee(e,t)}(i,e);var t,n,r,o,a=(t=i,function(){var e,n=re(t);if(ne()){var r=re(this).constructor;e=Reflect.construct(n,arguments,r)}else e=n.apply(this,arguments);return te(this,e)});function i(){var e;return Q(this,i),(e=a.apply(this,arguments)).state={readyResources:!1},e.loader=e.props.createLoader(),e.responsive=e.props.createResponsive({getTheme:function(){return e.props.theme}}),e}return n=i,(r=[{key:"componentDidMount",value:function(){this.loadResources()}},{key:"componentDidUpdate",value:function(e){e.background===this.props.background&&e.pattern===this.props.pattern||this.loadResources()}},{key:"render",value:function(){var e,t,n=this.props,r=n.Animation,o=n.Puffs,a=(n.createResponsive,n.createLoader,n.theme),i=n.classes,l=n.animation,s=n.animate,u=n.show,p=(n.background,n.pattern,n.loadResources,n.showResources),m=n.puffsProps,d=n.className,y=n.children,b=K(n,["Animation","Puffs","createResponsive","createLoader","theme","classes","animation","animate","show","background","pattern","loadResources","showResources","puffsProps","className","children"]),h=this.getActiveResources(),g=(!s||u)&&p&&this.state.readyResources,v=f()("arwes",i.root,oe({},i.resourcesReadyToShow,g),d);return g&&h.background&&(e={backgroundImage:"url(".concat(h.background,")")}),g&&h.pattern&&(t={backgroundImage:"url(".concat(h.pattern,")")}),c.a.createElement(r,J({show:u,animate:s,timeout:a.animTime},l),(function(n){return c.a.createElement("div",J({className:f()(v,i[n.status])},b),c.a.createElement("div",{className:i.background,style:e}),c.a.createElement("div",{className:i.pattern,style:t}),c.a.createElement(o,J({className:f()(i.puffs,m&&m.className),animate:!(!u||!s)},m)),c.a.createElement("div",{className:i.main},"function"==typeof y?y(n):y))}))}},{key:"getActiveResources",value:function(){var e=this.props,t=e.background,n=e.pattern,r=this.responsive.get();return{background:_(t,r),pattern:_(n,r)}}},{key:"loadResources",value:function(){var e=this;if(this.props.loadResources){var t=this.getActiveResources(),n=t.background,r=t.pattern;this.setState({readyResources:!1});var o=[];n&&o.push(n),r&&o.push(r),this.loader.load({images:o}).then((function(){e.setState({readyResources:!0})}))}}}])&&Z(n.prototype,r),o&&Z(n,o),i}(i.Component);oe(ae,"propTypes",{Animation:s.a.any.isRequired,Puffs:s.a.any.isRequired,createResponsive:s.a.any.isRequired,createLoader:s.a.any.isRequired,theme:s.a.any.isRequired,classes:s.a.any.isRequired,animate:s.a.bool,show:s.a.bool,animation:s.a.object,background:s.a.oneOfType([s.a.string,s.a.shape({small:s.a.string.isRequired,medium:s.a.string.isRequired,large:s.a.string.isRequired,xlarge:s.a.string.isRequired})]),pattern:s.a.oneOfType([s.a.string,s.a.shape({small:s.a.string.isRequired,medium:s.a.string.isRequired,large:s.a.string.isRequired,xlarge:s.a.string.isRequired})]),loadResources:s.a.bool,showResources:s.a.bool,puffsProps:s.a.object,children:s.a.any}),oe(ae,"defaultProps",{Animation:g,Puffs:q,createResponsive:Y,createLoader:M,show:!0,loadResources:!0,showResources:!0});var ie=function(e,t,n){return{"::selection":{backgroundColor:t,color:n,textShadow:"none"},"::-moz-selection":{backgroundColor:t,color:n,textShadow:"none"}}},ce=function(e,t,n){return{"::-webkit-scrollbar":{width:10,height:10,backgroundColor:t},"::-webkit-scrollbar-thumb":{border:"1px solid "+n,cursor:"pointer","&:hover":{borderColor:Object(N.lighten)(e.accent,n)}}}};function le(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function se(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?le(Object(n),!0).forEach((function(t){ue(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):le(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function ue(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var fe=function(e){return D(e,(function(e,t){return{name:"& ".concat(e),value:t}}))},pe={position:"absolute",left:0,right:0,top:0,bottom:0},me=a((function(e){return{root:se({},pe,{position:"fixed",overflow:"hidden",display:"block",boxSizing:"border-box",lineHeight:e.typography.lineHeight,fontFamily:e.typography.fontFamily,fontSize:e.typography.fontSize,color:e.color.primary.base,transition:"all ".concat(e.animTime,"ms ease-out"),opacity:1,"&$exiting, &$exited":{opacity:0},"& *, & *:before, & *:after":{boxSizing:"inherit"}},fe((t=e.color.primary.base,{"::-webkit-input-placeholder":{color:t},"::-moz-placeholder":{color:t},":-ms-input-placeholder":{color:t},":-moz-placeholder":{color:t}})),{},fe(ce(e,e.background.primary.level0,e.color.primary.base)),{},fe(ie(0,e.color.primary.base,e.background.primary.level0))),background:se({},pe,{zIndex:1,backgroundSize:"cover",backgroundPosition:"center",backgroundColor:e.background.primary.level0,transition:"all ".concat(e.animTime,"ms ease-in"),opacity:0}),pattern:se({},pe,{zIndex:2,backgroundRepeat:"repeat",backgroundPosition:"center top",backgroundAttachment:"fixed",transition:"all ".concat(e.animTime,"ms ease-in"),opacity:0}),puffs:se({},pe,{zIndex:3}),main:se({},pe,{zIndex:4,display:"block",overflowY:"auto"}),resourcesReadyToShow:{"& $background, & $pattern":{opacity:1}},entering:{},entered:{},exiting:{},exited:{}};var t}),{injectTheme:!0})(ae),de=n(8),ye=n.n(de);function be(e){return(be="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function he(){return(he=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function ge(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function ve(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Oe(e,t){return(Oe=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function we(e,t){return!t||"object"!==be(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function je(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function Pe(e){return(Pe=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function ke(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function xe(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var Se=function(){return function(e){var t=e.displayName||e.name||"Component",n=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?ke(Object(n),!0).forEach((function(t){xe(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):ke(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},e.defaultProps);delete n.sounds;var r=function(t){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Oe(e,t)}(l,t);var n,r,o,a,i=(n=l,function(){var e,t=Pe(n);if(je()){var r=Pe(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return we(this,e)});function l(){return ge(this,l),i.apply(this,arguments)}return r=l,(o=[{key:"render",value:function(){var t=this.props,n=this.context;return c.a.createElement(e,he({sounds:n.sounds},t))}}])&&ve(r.prototype,o),a&&ve(r,a),l}(i.Component);return xe(r,"displayName","ArwesSounds(".concat(t,")")),xe(r,"defaultProps",n),xe(r,"contextTypes",{sounds:s.a.object}),ye()(r,e)}};function Re(e){return(Re="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ee(){return(Ee=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function Te(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function Ae(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Ne(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function qe(e,t){return(qe=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function De(e,t){return!t||"object"!==Re(t)&&"function"!=typeof t?_e(e):t}function _e(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Ce(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function ze(e){return(ze=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Le(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}!function(){if(!H.a){if("performance"in window||(window.performance={}),!("now"in window.performance)){var e=Date.now();performance.timing&&performance.timing.navigationStart&&(e=performance.timing.navigationStart),window.performance.now=function(){return Date.now()-e}}for(var t=0,n=["ms","moz","webkit","o"],r=0;r<n.length&&!window.requestAnimationFrame;++r)window.requestAnimationFrame=window[n[r]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[n[r]+"CancelAnimationFrame"]||window[n[r]+"CancelRequestAnimationFrame"];window.requestAnimationFrame||(window.requestAnimationFrame=function(e){var n=(new Date).getTime(),r=Math.max(0,16-(n-t)),o=window.setTimeout((function(){e(n+r)}),r);return t=n+r,o}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(e){clearTimeout(e)})}}();var Ie=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&qe(e,t)}(i,e);var t,n,r,o,a=(t=i,function(){var e,n=ze(t);if(Ce()){var r=ze(this).constructor;e=Reflect.construct(n,arguments,r)}else e=n.apply(this,arguments);return De(this,e)});function i(){var e;return Ae(this,i),Le(_e(e=a.apply(this,arguments)),"currentAnimationFrame",null),e.state={text:"",animating:!1},e}return n=i,(r=[{key:"componentDidMount",value:function(){this.props.animate&&this.props.show&&this.animateIn()}},{key:"componentDidUpdate",value:function(e){var t=this.props,n=t.animate,r=t.show,o=t.children,a=n!==e.animate,i=r!==e.show,c=o!==e.children;n&&(i?r?this.animateIn():this.animateOut():c&&this.animateIn()),!n&&a&&this.stopAnimation()}},{key:"componentWillUnmount",value:function(){this.stopAnimation()}},{key:"render",value:function(){var e,t=this.props,n=(t.theme,t.classes),r=(t.sounds,t.animate),o=t.show,a=(t.animation,t.layer,t.blinkText),i=t.className,l=t.children,s=Te(t,["theme","classes","sounds","animate","show","animation","layer","blinkText","className","children"]),u=this.state,p=u.animating,m=u.text,d=f()(n.root,(Le(e={},n.hide,r&&!o&&!p),Le(e,n.animating,p),e),i);return c.a.createElement("span",Ee({className:f()(d)},s),c.a.createElement("span",{className:n.children},l),p&&c.a.createElement("span",{className:n.text},m,c.a.createElement("span",{className:n.blink,dangerouslySetInnerHTML:{__html:a}})))}},{key:"animateIn",value:function(){this.cancelNextAnimation(),this.startAnimation(!0)}},{key:"animateOut",value:function(){this.cancelNextAnimation(),this.startAnimation(!1)}},{key:"stopAnimation",value:function(){this.cancelNextAnimation(),this.setState({animating:!1});var e=this.props,t=e.animate,n=e.sounds;t&&n.typing&&n.typing.stop()}},{key:"cancelNextAnimation",value:function(){window.cancelAnimationFrame(this.currentAnimationFrame)}},{key:"startAnimation",value:function(e){var t=this,n=this.props,r=n.theme,o=n.children,a=n.animate,i=n.sounds,c=n.animation;if(0!==o.length){a&&i.typing&&i.typing.play();var l=1e3/60*o.length,s=(c||{}).timeout,u=void 0===s?r.animTime:s,f=Math.min(l,u);this.cancelNextAnimation(),this.setState({animating:!0,text:e?"":o});var p=o.length,m=performance.now(),d=null;this.currentAnimationFrame=window.requestAnimationFrame((function n(r){m||(m=r),d=Math.max(r-m,0),e||(d=f-d);var a=Math.round(d*p/f),i=o.substring(0,a);t.setState({text:i}),(e?a<=p:a>0)?t.currentAnimationFrame=window.requestAnimationFrame(n):t.stopAnimation()}))}}}])&&Ne(n.prototype,r),o&&Ne(n,o),i}(i.Component);Le(Ie,"propTypes",{theme:s.a.any.isRequired,classes:s.a.any.isRequired,animate:s.a.bool,show:s.a.bool,animation:s.a.shape({timeout:s.a.number}),sounds:s.a.object,layer:s.a.oneOf(["","primary","secondary","header","control","success","alert","disabled"]),blinkText:s.a.string,children:s.a.string.isRequired}),Le(Ie,"defaultProps",{sounds:{},show:!0,layer:"",blinkText:"&#9611;",children:""});var $e=a((function(e){return{root:{position:"relative",display:"inline-block",color:function(t){return e.color[t.layer]&&e.color[t.layer].base}},children:{display:"inline-block"},text:{position:"absolute",left:0,right:0,top:0,overflow:"hidden",display:"inline-block",opacity:0},blink:{position:"relative",width:0,height:0,display:"inline-block",animation:"arwes-words-blink ".concat(e.animTime,"ms step-end infinite")},hide:{opacity:0},animating:{"& $children":{opacity:0},"& $text":{opacity:1}},"@keyframes arwes-words-blink":{"0%, 100%":{color:"transparent"},"50%":{color:"inherit"}}}}),{injectTheme:!0})(Se()(Ie));function Fe(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Me(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function We(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function He(e){e.theme;var t=e.classes,n=e.node,r=e.className,o=e.children,a=We(e,["theme","classes","node","className","children"]),i=f()(t.root,r);return c.a.createElement(n,function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Fe(Object(n),!0).forEach((function(t){Me(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Fe(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({className:i},a),o)}function Be(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Ue(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Be(Object(n),!0).forEach((function(t){Ge(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Be(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Ge(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}He.propTypes={theme:s.a.any.isRequired,classes:s.a.any.isRequired,node:s.a.oneOf(["h1","h2","h3","h4","h5","h6"])},He.defaultProps={node:"h1"};var Xe=function(e){return{margin:[0,0,e.margin],fontFamily:e.typography.headerFontFamily,fontWeight:"bold",textTransform:"uppercase",textShadow:"0 0 ".concat(e.shadowLength,"px ")+Object(N.rgba)(e.color.header.base,e.alpha),color:e.color.header.base,transition:"color ".concat(e.animTime,"ms ease-out")}},Ye=a((function(e){return{root:Ue({},Xe(e),{"h1&":{fontSize:e.typography.headerSizes.h1},"h2&":{fontSize:e.typography.headerSizes.h2},"h3&":{fontSize:e.typography.headerSizes.h3},"h4&":{fontSize:e.typography.headerSizes.h4},"h5&":{fontSize:e.typography.headerSizes.h5},"h6&":{fontSize:e.typography.headerSizes.h6}})}}),{injectTheme:!0})(He);function Ve(){return(Ve=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function Je(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function Ke(e){e.theme;var t=e.classes,n=e.className,r=e.children,o=Je(e,["theme","classes","className","children"]),a=f()(t.root,n);return c.a.createElement("p",Ve({className:a},o),r)}Ke.propTypes={theme:s.a.any.isRequired,classes:s.a.any.isRequired};var Qe=function(e){return{margin:[0,0,e.margin]}},Ze=a((function(e){return{root:Qe(e)}}),{injectTheme:!0})(Ke);function et(){return(et=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function tt(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function nt(e){e.theme;var t=e.classes,n=e.className,r=e.children,o=tt(e,["theme","classes","className","children"]),a=f()(t.root,n);return c.a.createElement("a",et({className:a},o),r)}nt.propTypes={theme:s.a.any.isRequired,classes:s.a.any.isRequired};var rt=function(e){return{color:e.color.control.base,textShadow:"0 0 ".concat(e.shadowLength,"px ")+Object(N.rgba)(e.color.control.base,e.alpha),transition:"color ".concat(e.animTime,"ms ease-out"),textDecoration:"none",cursor:"pointer","&:hover":{color:e.color.control.light}}},ot=a((function(e){return{root:rt(e)}}),{injectTheme:!0})(nt);function at(){return(at=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function it(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function ct(e){e.theme;var t=e.classes,n=e.layer,r=e.className,o=e.children,a=it(e,["theme","classes","layer","className","children"]),i=f()(t.root,r);return c.a.createElement("blockquote",at({className:i,"data-layer":n},a),o)}ct.propTypes={theme:s.a.any.isRequired,classes:s.a.any.isRequired,layer:s.a.oneOf(["","success","alert","disabled"])};var lt=function(e){return{display:"block",borderLeft:"4px solid "+e.color.primary.light,margin:[0,0,e.margin,e.margin],padding:[0,0,0,e.padding/2],color:e.color.primary.light,'&[data-layer="alert"]':{borderColor:e.color.alert.light,color:e.color.alert.light},'&[data-layer="success"]':{borderColor:e.color.success.light,color:e.color.success.light},'&[data-layer="disabled"]':{borderColor:e.color.disabled.light,color:e.color.disabled.light}}},st=a((function(e){return{root:lt(e)}}),{injectTheme:!0})(ct);function ut(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function ft(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function pt(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function mt(e){e.theme;var t=e.classes,n=e.node,r=e.className,o=e.children,a=pt(e,["theme","classes","node","className","children"]),i=f()(t.root,r);return c.a.createElement(n,function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?ut(Object(n),!0).forEach((function(t){ft(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):ut(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({className:i},a),o)}function dt(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function yt(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?dt(Object(n),!0).forEach((function(t){bt(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):dt(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function bt(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}mt.propTypes={theme:s.a.any.isRequired,classes:s.a.any.isRequired,node:s.a.oneOf(["ul","ol","dl"])},mt.defaultProps={node:"ul"};var ht=function(e){return{display:"block",margin:[0,0,e.margin,e.margin],padding:0,"& dl, & ul, & ol":{marginBottom:0}}},gt=function(e){return{marginLeft:e.margin+e.padding/2,"& li":{display:"block",listStyle:"none",paddingLeft:e.padding},"& li:before":{position:"relative",left:-e.padding/2,display:"inline-block",marginLeft:-e.padding,content:'">>"',color:e.color.primary.light}}},vt=function(e){return{marginLeft:e.padding,paddingLeft:e.typography.fontSize,"& ol":{marginLeft:0}}},Ot=function(e){return{"& dt":{fontStyle:"italic",fontWeight:"bold"},"& dd":{marginLeft:e.typography.fontSize}}},wt=a((function(e){return{root:yt({},ht(e),{"ul&":gt(e),"ol&":vt(e),"dl&":Ot(e)})}}),{injectTheme:!0})(mt);function jt(){return(jt=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function Pt(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function kt(e){e.theme;var t=e.classes,n=e.className,r=e.children,o=Pt(e,["theme","classes","className","children"]),a=f()(t.root,n);return c.a.createElement("div",jt({className:a},o),r)}kt.propTypes={theme:s.a.any.isRequired,classes:s.a.any.isRequired};var xt=a((function(e){return{root:{"& h1, & h2, & h3, & h4, & h5, & h6":Xe(e),"& h1":{fontSize:e.typography.headerSizes.h1},"& h2":{fontSize:e.typography.headerSizes.h2},"& h3":{fontSize:e.typography.headerSizes.h3},"& h4":{fontSize:e.typography.headerSizes.h4},"& h5":{fontSize:e.typography.headerSizes.h5},"& h6":{fontSize:e.typography.headerSizes.h6},"& a":rt(e),"& p":Qe(e),"& blockquote":lt(e),"& ul, & ol, & dl":ht(e),"& ul":gt(e),"& ol":vt(e),"& dl":Ot(e)}}}),{injectTheme:!0})(kt);function St(e){return(St="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Rt(){return(Rt=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function Et(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function Tt(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function At(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Nt(e,t){return(Nt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function qt(e,t){return!t||"object"!==St(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Dt(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function _t(e){return(_t=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Ct(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var zt=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Nt(e,t)}(i,e);var t,n,r,o,a=(t=i,function(){var e,n=_t(t);if(Dt()){var r=_t(this).constructor;e=Reflect.construct(n,arguments,r)}else e=n.apply(this,arguments);return qt(this,e)});function i(){return Tt(this,i),a.apply(this,arguments)}return n=i,(r=[{key:"componentDidMount",value:function(){var e=this.props,t=e.animate,n=e.show,r=e.sounds;t&&n&&r.deploy&&r.deploy.play()}},{key:"componentDidUpdate",value:function(e){var t=this.props,n=t.animate,r=t.show,o=t.sounds;n&&e.show!==r&&o.deploy&&o.deploy.play()}},{key:"componentWillUnmount",value:function(){var e=this.props,t=e.animate,n=e.sounds;t&&n.deploy&&n.deploy.stop()}},{key:"render",value:function(){var e=this.props,t=e.Animation,n=e.animation,r=e.theme,o=e.classes,a=(e.sounds,e.animate),i=e.show,l=(e.layer,e.level,e.corners),s=e.border,u=e.disabled,p=(e.active,e.hover),m=(e.noBackground,e.className),d=e.children,y=Et(e,["Animation","animation","theme","classes","sounds","animate","show","layer","level","corners","border","disabled","active","hover","noBackground","className","children"]),b=f()(o.root,Ct({},o.hover,!u&&p),m);return c.a.createElement(t,Rt({show:i,animate:a,timeout:r.animTime},n),(function(e){return c.a.createElement("div",Rt({className:f()(b,o[e.status])},y),s&&c.a.createElement("div",{className:f()(o.border,o.borderLeft)}),s&&c.a.createElement("div",{className:f()(o.border,o.borderRight)}),s&&c.a.createElement("div",{className:f()(o.border,o.borderTop)}),s&&c.a.createElement("div",{className:f()(o.border,o.borderBottom)}),!!l&&c.a.createElement("div",{className:f()(o.corner,o.cornerLT)}),!!l&&c.a.createElement("div",{className:f()(o.corner,o.cornerLB)}),!!l&&c.a.createElement("div",{className:f()(o.corner,o.cornerRT)}),!!l&&c.a.createElement("div",{className:f()(o.corner,o.cornerRB)}),c.a.createElement("div",{className:o.box},c.a.createElement("div",{className:o.children},"function"==typeof d?d(e):d)))}))}}])&&At(n.prototype,r),o&&At(n,o),i}(i.Component);Ct(zt,"propTypes",{Animation:s.a.any.isRequired,theme:s.a.any.isRequired,classes:s.a.any.isRequired,animate:s.a.bool,show:s.a.bool,animation:s.a.object,sounds:s.a.object,layer:s.a.oneOf(["primary","secondary","header","control","success","alert","disabled"]),level:s.a.oneOf([0,1,2,3]),corners:s.a.oneOf([0,1,2,3,4,5,6]),border:s.a.bool,disabled:s.a.bool,active:s.a.bool,hover:s.a.bool,noBackground:s.a.bool,children:s.a.any}),Ct(zt,"defaultProps",{Animation:g,sounds:{},show:!0,layer:"primary",level:0,corners:0,border:!0});var Lt=function(e){switch(e){case 1:return 8;case 2:case 3:return 16;case 4:case 5:return 24;default:return 32}},It=function(e){switch(e){case 1:case 2:return 1;case 3:case 4:return 2;case 6:default:return 3}},$t=function(e,t,n){return e.color[t.disabled?"disabled":t.layer][n]},Ft=function(e,t){return e.background[t.disabled?"disabled":t.layer]["level"+t.level]},Mt=a((function(e){return{root:{display:"block",position:"relative",padding:"1px","&$exiting, &$exited":{"& $borderLeft, & $borderRight":{height:"0%"},"& $borderTop, & $borderBottom":{width:"0%"},"& $corner":{width:0,height:0,opacity:0},"& $box":{backgroundColor:"transparent"}},"&$hover:hover":{"& $border":{borderColor:function(t){return $t(e,t,"base")},boxShadow:function(t){return"0 0 ".concat(e.shadowLength,"px ")+Object(N.rgba)($t(e,t,"base"),e.alpha)}},"& $corner":{borderColor:function(t){return $t(e,t,"light")},boxShadow:function(t){return"0 0 ".concat(e.shadowLength,"px -").concat(e.shadowLength/2,"px ")+Object(N.rgba)($t(e,t,"light"),e.alpha)}}}},box:{zIndex:3,position:"relative",overflow:"hidden",display:"block",transition:"background-color ".concat(e.animTime,"ms ease-in"),backgroundColor:function(t){return t.noBackground?"transparent":t.active?Object(N.rgba)(Object(N.lighten)(e.accent,Ft(e,t)),e.alpha):Object(N.rgba)(Ft(e,t),e.alpha)}},children:{display:"block"},border:{zIndex:1,position:"absolute",borderStyle:"solid",transition:"all ".concat(e.animTime,"ms ease-in"),borderColor:function(t){return $t(e,t,"dark")},boxShadow:function(t){return"0 0 ".concat(e.shadowLength,"px ")+Object(N.rgba)($t(e,t,"dark"),e.alpha)},opacity:1},borderLeft:{left:0,top:"50%",transform:"translate(0, -50%)",borderWidth:"0 0 0 1px",height:"100%"},borderRight:{right:0,top:"50%",transform:"translate(0, -50%)",borderWidth:"0 0 0 1px",height:"100%"},borderTop:{top:0,left:"50%",transform:"translate(-50%, 0)",borderWidth:"1px 0 0 0",width:"100%"},borderBottom:{bottom:0,left:"50%",transform:"translate(-50%, 0)",borderWidth:"1px 0 0 0",width:"100%"},corner:{zIndex:2,position:"absolute",width:function(e){return Lt(e.corners)},height:function(e){return Lt(e.corners)},transition:"all ".concat(e.animTime,"ms ease-in"),borderStyle:"solid",borderColor:function(t){return $t(e,t,"base")},boxShadow:function(t){return"0 0 ".concat(e.shadowLength,"px -").concat(e.shadowLength/2,"px ")+Object(N.rgba)($t(e,t,"base"),e.alpha)},opacity:1},cornerLT:{left:function(e){return-It(e.corners)},top:function(e){return-It(e.corners)},borderWidth:function(e){return"".concat(It(e.corners),"px 0 0 ").concat(It(e.corners),"px")}},cornerLB:{left:function(e){return-It(e.corners)},bottom:function(e){return-It(e.corners)},borderWidth:function(e){return"0 0 ".concat(It(e.corners),"px ").concat(It(e.corners),"px")}},cornerRT:{right:function(e){return-It(e.corners)},top:function(e){return-It(e.corners)},borderWidth:function(e){return"".concat(It(e.corners),"px ").concat(It(e.corners),"px 0 0")}},cornerRB:{right:function(e){return-It(e.corners)},bottom:function(e){return-It(e.corners)},borderWidth:function(e){return"0 ".concat(It(e.corners),"px ").concat(It(e.corners),"px 0")}},hover:{},entering:{},entered:{},exiting:{},exited:{}}}),{injectTheme:!0})(Se()(zt));function Wt(e){return(Wt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ht(){return(Ht=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function Bt(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function Ut(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Gt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Xt(e,t){return(Xt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Yt(e,t){return!t||"object"!==Wt(t)&&"function"!=typeof t?Vt(e):t}function Vt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Jt(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function Kt(e){return(Kt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Qt(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var Zt=["webkitAnimationEnd","mozAnimationEnd","MSAnimationEnd","oanimationend","animationend"],en=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Xt(e,t)}(i,e);var t,n,r,o,a=(t=i,function(){var e,n=Kt(t);if(Jt()){var r=Kt(this).constructor;e=Reflect.construct(n,arguments,r)}else e=n.apply(this,arguments);return Yt(this,e)});function i(){var e;Ut(this,i);for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return Qt(Vt(e=a.call.apply(a,[this].concat(n))),"element",null),Qt(Vt(e),"clickElement",null),Qt(Vt(e),"onClick",(function(){var t=e.props,n=t.animate,r=t.classes;n&&(e.clickElement&&e.clickElement.remove(),e.clickElement=document.createElement("div"),e.clickElement.setAttribute("class",r.click),e.element.appendChild(e.clickElement),Zt.forEach((function(t){e.clickElement.addEventListener(t,(function(){return e.clickElement.remove()}))})))})),e}return n=i,(r=[{key:"render",value:function(){var e=this,t=this.props,n=(t.theme,t.classes),r=t.layer,o=(t.animate,t.className),a=t.children,i=Bt(t,["theme","classes","layer","animate","className","children"]),l=f()(n.root,n[r],o);return c.a.createElement("div",Ht({className:l,ref:function(t){return e.element=t}},i),c.a.createElement("div",{className:n.children,onClick:this.onClick},a))}}])&&Gt(n.prototype,r),o&&Gt(n,o),i}(i.Component);Qt(en,"propTypes",{animate:s.a.bool,layer:s.a.oneOf(["primary","secondary","header","control","success","alert","disabled"])}),Qt(en,"defaultProps",{animate:!0,layer:"primary"});var tn=a((function(e){return{root:{display:"block",position:"relative"},click:{zIndex:1,position:"absolute",left:0,right:0,top:0,bottom:0,backgroundColor:function(t){return Object(N.darken)(.3,e.color[t.layer].base)},animation:"arwes-highlight-click ".concat(e.animTime,"ms ease-out 0ms 1")},children:{zIndex:2,position:"relative",display:"block"},"@keyframes arwes-highlight-click":{"0%":{opacity:1},"100%":{opacity:0,backgroundColor:"transparent"}}}}),{injectTheme:!0})(en);function nn(e){return(nn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function rn(){return(rn=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function on(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function an(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function cn(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function ln(e,t){return(ln=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function sn(e,t){return!t||"object"!==nn(t)&&"function"!=typeof t?un(e):t}function un(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function fn(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function pn(e){return(pn=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function mn(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var dn=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&ln(e,t)}(i,e);var t,n,r,o,a=(t=i,function(){var e,n=pn(t);if(fn()){var r=pn(this).constructor;e=Reflect.construct(n,arguments,r)}else e=n.apply(this,arguments);return sn(this,e)});function i(){var e;an(this,i);for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];return mn(un(e=a.call.apply(a,[this].concat(n))),"onClick",(function(t){var n=e.props,r=n.disabled,o=n.onClick,a=n.animate,i=n.sounds;r||(o&&o(t),a&&i.click&&i.click.play())})),e}return n=i,(r=[{key:"render",value:function(){var e=this,t=this.props,n=t.Animation,r=t.Highlight,o=t.Frame,a=t.theme,i=t.classes,l=(t.sounds,t.animation),s=t.animate,u=t.show,p=t.layer,m=t.level,d=t.disabled,y=t.active,b=t.className,h=t.buttonProps,g=t.children,v=on(t,["Animation","Highlight","Frame","theme","classes","sounds","animation","animate","show","layer","level","disabled","active","className","buttonProps","children"]),O=f()(i.root,b);return c.a.createElement(n,rn({show:u,animate:s,timeout:a.animTime},l),(function(t){return c.a.createElement("div",rn({className:O},v,{onClick:e.onClick}),c.a.createElement(o,{hover:!0,animate:s,show:u,corners:1,level:m,layer:d?"disabled":p,disabled:d,active:y},c.a.createElement(r,{animate:!d,layer:p},c.a.createElement("button",rn({className:i.button,disabled:d},h),"function"==typeof g?g(t):g))))}))}}])&&cn(n.prototype,r),o&&cn(n,o),i}(i.Component);mn(dn,"propTypes",{Animation:s.a.any.isRequired,Highlight:s.a.any.isRequired,Frame:s.a.any.isRequired,theme:s.a.any.isRequired,classes:s.a.any.isRequired,animate:s.a.bool,show:s.a.bool,animation:s.a.object,sounds:s.a.object,layer:s.a.oneOf(["primary","secondary","header","control","success","alert","disabled"]),disabled:s.a.bool,active:s.a.bool,level:s.a.number,buttonProps:s.a.object,children:s.a.any}),mn(dn,"defaultProps",{Animation:g,Highlight:tn,Frame:Mt,sounds:{},show:!0,layer:"control",level:2});var yn=a((function(e){return{root:{display:"inline-block",position:"relative",lineHeight:1,verticalAlign:"middle"},button:{position:"relative",zIndex:2,display:"inline-block",margin:0,border:"none",padding:[e.padding/2,e.padding],background:"transparent",color:function(t){return e.color[t.disabled?"disabled":t.layer].base},fontSize:.75*e.typography.fontSize,lineHeight:1,verticalAlign:"middle",transition:"all ".concat(e.animTime,"ms ease-out"),userSelect:"none",outline:"none",cursor:function(e){return e.disabled?"auto":"pointer"},"&:focus":{outline:"none"},"&::-moz-focus-inner":{border:"none"},"& .mdi, & .icon":{lineHeight:0,fontSize:"140%",verticalAlign:"middle"}}}}),{injectTheme:!0})(Se()(dn));function bn(){return(bn=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function hn(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function gn(e){var t=e.theme,n=e.classes,r=e.Animation,o=e.animation,a=e.animate,i=e.show,l=(e.layer,e.className),s=hn(e,["theme","classes","Animation","animation","animate","show","layer","className"]),u=f()(n.root,l);return c.a.createElement(r,bn({animate:a,show:i,timeout:t.animTime},o),(function(e){return c.a.createElement("div",bn({className:f()(u,n[e.status])},s),c.a.createElement("div",{className:n.line}),c.a.createElement("div",{className:n.left}),c.a.createElement("div",{className:n.right}))}))}gn.propTypes={Animation:s.a.any.isRequired,theme:s.a.any.isRequired,classes:s.a.any.isRequired,animate:s.a.bool,show:s.a.bool,animation:s.a.object,layer:s.a.oneOf(["primary","secondary","header","control","success","alert","disabled"])},gn.defaultProps={Animation:g,show:!0,layer:"primary"};var vn=a((function(e){return{root:{position:"relative",display:"block",margin:[0,0,e.margin],width:"100%",height:1,"&$exiting, &$exited":{"& $line":{width:"0%"},"& $left, & $right":{opacity:0}}},line:{position:"absolute",top:0,left:"50%",transform:"translateX(-50%)",width:"100%",display:"block",borderStyle:"solid",borderColor:function(t){return e.color[t.layer].dark},borderWidth:"0 0 1px",transition:"all ".concat(e.animTime,"ms ease-out")},left:{position:"absolute",left:0,top:-1,display:"block",width:3,height:3,background:function(t){return e.color[t.layer].dark},opacity:1,transition:"all ".concat(e.animTime/4*3,"ms ease-out ").concat(e.animTime/4,"ms")},right:{position:"absolute",top:-1,right:0,display:"block",width:3,height:3,background:function(t){return e.color[t.layer].dark},opacity:1,transition:"all ".concat(e.animTime/4*3,"ms ease-out ").concat(e.animTime/4,"ms")},entering:{},entered:{},exiting:{},exited:{}}}),{injectTheme:!0})(gn);function On(){return(On=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function wn(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function jn(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function Pn(e){var t,n=e.theme,r=e.classes,o=e.animation,a=e.Animation,i=e.animate,l=e.show,s=(e.layer,e.small),u=e.full,p=e.className,m=jn(e,["theme","classes","animation","Animation","animate","show","layer","small","full","className"]),d=f()(r.root,(wn(t={},r.isSmall,s),wn(t,r.isFull,u),t),p);return c.a.createElement(a,On({animate:i,show:l,timeout:n.animTime},o),(function(e){return c.a.createElement("div",On({className:f()(d,r[e.status])},m),!s&&c.a.createElement("div",{className:f()(r.circle,r.circle1)}),c.a.createElement("div",{className:f()(r.circle,r.circle2)}))}))}Pn.propTypes={Animation:s.a.any.isRequired,theme:s.a.any.isRequired,classes:s.a.any.isRequired,animate:s.a.bool,show:s.a.bool,animation:s.a.object,layer:s.a.oneOf(["primary","secondary","header","control","success","alert","disabled"]),small:s.a.bool,full:s.a.bool},Pn.defaultProps={Animation:g,show:!0,layer:"primary"};var kn=a((function(e){return{root:{zIndex:1e3,position:"relative",display:"block",minHeight:50+2*e.padding,transition:"all ".concat(e.animTime,"ms ease-out"),opacity:1,"&$exiting, &$exited":{opacity:0}},circle:{position:"absolute",left:"50%",top:"50%",display:"block",borderTop:function(t){return"5px solid "+e.color[t.layer].base},borderBottom:function(t){return"5px solid "+e.color[t.layer].base},borderLeft:"5px solid transparent",borderRight:"5px solid transparent",borderRadius:"50%",backgroundColor:"transparent",boxShadow:function(t){return"0 0 ".concat(2*e.shadowLength,"px ").concat(e.color[t.layer].base)},transition:"all ".concat(e.animTime,"ms ease-out")},circle1:{marginLeft:-25,marginTop:-25,width:50,height:50,animation:"arwes-loading-circle1 ".concat(3*e.animTime,"ms infinite linear")},circle2:{marginLeft:-15,marginTop:-15,width:30,height:30,animation:"arwes-loading-circle2 ".concat(3*e.animTime,"ms infinite linear")},isSmall:{display:"inline-block",minWidth:16,minHeight:16,verticalAlign:"middle","& $circle2":{marginLeft:-8,marginTop:-8,width:16,height:16,borderTop:function(t){return"3px solid "+e.color[t.layer].base},borderBottom:function(t){return"3px solid "+e.color[t.layer].base},borderLeft:"3px solid transparent",borderRight:"3px solid transparent"}},isFull:{position:"absolute",left:0,right:0,top:0,bottom:0},entering:{},entered:{},exiting:{},exited:{},"@keyframes arwes-loading-circle1":{"0%":{transform:"rotate(160deg)",opacity:0},"50%":{transform:"rotate(145deg)",opacity:1},"100%":{transform:"rotate(-320deg)",opacity:0}},"@keyframes arwes-loading-circle2":{"0%":{transform:"rotate(0deg)"},"100%":{transform:"rotate(360deg)"}}}}),{injectTheme:!0})(Pn);function xn(e){return(xn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Sn(){return(Sn=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function Rn(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function En(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Tn(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function An(e,t,n){return t&&Tn(e.prototype,t),n&&Tn(e,n),e}function Nn(e,t){return(Nn=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function qn(e,t){return!t||"object"!==xn(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Dn(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function _n(e){return(_n=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Cn(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var zn=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Nn(e,t)}(r,e);var t,n=(t=r,function(){var e,n=_n(t);if(Dn()){var r=_n(this).constructor;e=Reflect.construct(n,arguments,r)}else e=n.apply(this,arguments);return qn(this,e)});function r(){var e;return En(this,r),(e=n.apply(this,arguments)).state=e.getDefaultState(),e.loader=e.props.createLoader(),e.responsive=e.props.createResponsive({getTheme:function(){return e.props.theme}}),e}return An(r,[{key:"getDefaultState",value:function(){return{ready:!1,error:!1,resource:null}}}]),An(r,[{key:"componentDidMount",value:function(){this.loadResource()}},{key:"componentDidUpdate",value:function(e){this.props.resources!==e.resources&&this.loadResource()}},{key:"render",value:function(){var e=this.props,t=e.Animation,n=e.Frame,r=e.Loading,o=(e.createLoader,e.createResponsive,e.animation),a=e.theme,i=e.classes,l=e.animate,s=e.show,u=e.layer,p=(e.loadResources,e.resources,e.imgProps),m=e.i18n,d=e.className,y=e.children,b=Rn(e,["Animation","Frame","Loading","createLoader","createResponsive","animation","theme","classes","animate","show","layer","loadResources","resources","imgProps","i18n","className","children"]),h=this.state,g=h.ready,v=h.error,O=h.resource,w=f()(i.root,Cn({},i.ready,g),d);return c.a.createElement(t,Sn({animate:l,show:s,timeout:a.animTime},o),(function(e){return c.a.createElement("figure",Sn({className:f()(w,i[e.status])},b),c.a.createElement(n,{animate:l,show:s,layer:u},c.a.createElement("div",{className:i.holder},c.a.createElement("img",Sn({},p,{className:f()(i.img,p.className),src:O})),v&&c.a.createElement("div",{className:i.error},m.error),!g&&!v&&c.a.createElement(r,{full:!0,animate:l,show:s,layer:u})),!!y&&c.a.createElement("div",{className:i.separator}),!!y&&c.a.createElement("figcaption",{className:i.children},c.a.createElement("small",null,"function"==typeof y?y(e):y))))}))}},{key:"loadResource",value:function(){var e=this,t=this.props,n=t.resources;if(t.loadResources){var r=this.responsive.get(),o=_(n,r);this.setState(this.getDefaultState()),this.loader.load({images:[o]}).then((function(){e.setState({ready:!0,resource:o})}),(function(){e.setState({error:!0})}))}}}]),r}(i.Component);Cn(zn,"propTypes",{Animation:s.a.any.isRequired,Frame:s.a.any.isRequired,Loading:s.a.any.isRequired,createLoader:s.a.any.isRequired,createResponsive:s.a.any.isRequired,theme:s.a.any.isRequired,classes:s.a.any.isRequired,animate:s.a.bool,show:s.a.bool,animation:s.a.object,layer:s.a.oneOf(["primary","secondary","header","control","success","alert","disabled"]),loadResources:s.a.bool,resources:s.a.oneOfType([s.a.string,s.a.shape({small:s.a.string.isRequired,medium:s.a.string.isRequired,large:s.a.string.isRequired,xlarge:s.a.string.isRequired})]).isRequired,i18n:s.a.shape({error:s.a.string}),imgProps:s.a.object,children:s.a.any}),Cn(zn,"defaultProps",{Animation:g,Frame:Mt,Loading:kn,createLoader:M,createResponsive:Y,show:!0,layer:"primary",loadResources:!0,i18n:{error:"Image error"},imgProps:{}});var Ln=a((function(e){return{root:{position:"relative",display:"block",margin:[0,0,e.margin],width:"100%",minHeight:1,verticalAlign:"middle","&$exiting, &$exited":{"& $separator":{width:0},"& $img, & $children":{opacity:0}}},holder:{position:"relative",display:"flex",flexDirection:"column",transition:"all ".concat(e.animTime,"ms ease-out"),minHeight:200},img:{display:"block",border:"none",margin:0,padding:0,width:"100%",height:"auto",verticalAlign:"top",boxShadow:"none",transition:"all ".concat(e.animTime,"ms ease-in"),opacity:0},error:{display:"block",margin:"auto",textAlign:"center",color:e.color.alert.base},separator:{position:"absolute",top:"auto",left:"50%",transform:"translateX(-50%)",display:"block",width:"100%",borderStyle:"solid",borderColor:function(t){return Object(N.rgba)(e.color[t.layer].dark,e.alpha/2)},borderWidth:"0 0 1px",transition:"all ".concat(e.animTime,"ms ease-in")},children:{display:"block",margin:0,padding:e.padding/2,textAlign:"center",backgroundColor:function(t){return e.background[t.layer].level1},color:function(t){return e.color[t.layer].dark},transition:"opacity ".concat(e.animTime,"ms ease-in"),opacity:1},ready:{"& $holder":{minHeight:"auto"},"& $img":{opacity:1}},entering:{},entered:{},exiting:{},exited:{}}}),{injectTheme:!0})(zn);n(11);function In(e){return(In="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function $n(){return($n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function Fn(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function Mn(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Wn(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Hn(e,t){return(Hn=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Bn(e,t){return!t||"object"!==In(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Un(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function Gn(e){return(Gn=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Xn(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var Yn=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Hn(e,t)}(i,e);var t,n,r,o,a=(t=i,function(){var e,n=Gn(t);if(Un()){var r=Gn(this).constructor;e=Reflect.construct(n,arguments,r)}else e=n.apply(this,arguments);return Bn(this,e)});function i(){return Mn(this,i),a.apply(this,arguments)}return n=i,(r=[{key:"componentDidMount",value:function(){this.highlight()}},{key:"componentDidUpdate",value:function(){this.highlight()}},{key:"render",value:function(){var e=this,t=this.props,n=t.Animation,r=t.animation,o=t.theme,a=t.classes,i=t.animate,l=t.show,s=t.type,u=t.language,p=t.className,m=t.children,d=Fn(t,["Animation","animation","theme","classes","animate","show","type","language","className","children"]),y=f()(a.root,p);return c.a.createElement(n,$n({animate:i,show:l,timeout:o.animTime},r),(function(t){return c.a.createElement(s,$n({className:f()(y,a[t.status],"language-"+u)},d,{ref:function(t){return e.wrapper=t}}),m)}))}},{key:"highlight",value:function(){Prism.highlightElement(this.wrapper)}}])&&Wn(n.prototype,r),o&&Wn(n,o),i}(i.Component);function Vn(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Xn(Yn,"propTypes",{Animation:s.a.any.isRequired,theme:s.a.any.isRequired,classes:s.a.any.isRequired,animate:s.a.bool,show:s.a.bool,animation:s.a.object,type:s.a.oneOf(["code","pre"]),language:s.a.string}),Xn(Yn,"defaultProps",{Animation:g,show:!0,type:"code",language:"javascript"});var Jn=a((function(e){var t;return{root:(t={display:"inline-block",verticalAlign:"middle",fontFamily:e.code.fontFamily,fontSize:e.code.fontSize,lineHeight:"1.375",direction:"ltr",textAlign:"left",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",mozTabSize:"2",oTabSize:"2",tabSize:"2",webkitHyphens:"none",mozHyphens:"none",msHyphens:"none",hyphens:"none",background:Object(N.rgba)(e.code.background,e.alpha),color:e.code.color,transition:"all ".concat(e.animTime,"ms ease-out"),opacity:1,"&$exiting, &$exited":{opacity:0},"pre&":{display:"block",margin:[0,0,e.margin],padding:e.padding/2,verticalAlign:"top",overflow:"auto"}},Vn(t,"& .token.comment,\n        & .token.prolog,\n        & .token.doctype,\n        & .token.cdata,\n        & .token.punctuation",{color:e.code.comment}),Vn(t,"& .token.punctuation",{opacity:1}),Vn(t,"& .token.tag,\n        & .token.operator",{color:e.code.operator}),Vn(t,"& .token.property,\n        & .token.function",{color:e.code.function}),Vn(t,"& .token.tag-id,\n        & .token.selector,\n        & .token.atrule-id",{color:e.code.selector}),Vn(t,"&.language-css,\n        &.language-scss,\n        & .token.boolean,\n        & .token.string,\n        & .token.number,\n        & .token.entity,\n        & .token.url,\n        & .language-css .token.string,\n        & .language-scss .token.string,\n        & .style .token.string,\n        & .token.attr-value,\n        & .token.keyword,\n        & .token.control,\n        & .token.directive,\n        & .token.unit,\n        & .token.statement,\n        & .token.regex,\n        & .token.atrule",{color:e.code.value}),Vn(t,"& .token.atrule,\n        & .token.attr-value,\n        & .token.keyword",{color:e.code.keyword}),Vn(t,"& .token.placeholder,\n        & .token.attr-name,\n        & .token.variable",{color:e.code.variable}),Vn(t,"& .token.deleted",{textDecoration:"line-through"}),Vn(t,"& .token.italic",{fontStyle:"italic"}),Vn(t,"& .token.important,\n        & .token.bold",{fontWeight:"bold"}),Vn(t,"& .token.regex,\n        & .token.important",{color:e.code.operator}),Vn(t,"& .token.entity",{cursor:"help"}),t),entering:{},entered:{},exiting:{},exited:{}}}),{injectTheme:!0})(Yn);function Kn(){return(Kn=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function Qn(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function Zn(e){var t=e.theme,n=e.classes,r=e.Animation,o=e.animation,a=e.animate,i=e.show,l=e.headers,s=e.dataset,u=e.minWidth,p=e.className,m=e.children,d=Qn(e,["theme","classes","Animation","animation","animate","show","headers","dataset","minWidth","className","children"]),y=f()(n.root,p);return c.a.createElement(r,Kn({animate:a,show:i,timeout:t.animTime},o),(function(e){return c.a.createElement("div",Kn({className:f()(y,n[e.status])},d),c.a.createElement("div",{style:{minWidth:u}},!m&&c.a.createElement("table",null,c.a.createElement("thead",null,c.a.createElement("tr",null,l.map((function(e,t){return c.a.createElement("th",{key:t},e)})))),c.a.createElement("tbody",null,s.filter((function(e){return!!e})).map((function(e,t){return c.a.createElement("tr",{key:t},e.map((function(e,t){return c.a.createElement("td",{key:t},e)})))})))),m))}))}Zn.propTypes={Animation:s.a.any.isRequired,theme:s.a.any.isRequired,classes:s.a.any.isRequired,animate:s.a.bool,show:s.a.bool,animation:s.a.object,headers:s.a.array,dataset:s.a.arrayOf(s.a.array),minWidth:s.a.oneOfType([s.a.number,s.a.string]),children:s.a.any},Zn.defaultProps={Animation:g,show:!0,headers:[],dataset:[]};var er=a((function(e){return{root:{display:"block",overflowX:"auto",margin:[0,0,e.margin],fontSize:"80%",transition:"all ".concat(e.animTime,"ms ease-out"),opacity:1,"&$exiting, &$exited":{opacity:0},"& table":{width:"100%",borderCollapse:"collapse"},"& thead":{textAlign:"left",fontFamily:e.typography.headerFontFamily,fontWeight:"bold",color:e.color.header.base,whiteSpace:"nowrap"},"& tbody":{"& p, & ul, & ol, & dl, & blockquote":{marginBottom:0}},"& tr":{borderBottom:"1px solid "+Object(N.rgba)(e.color.primary.dark,e.alpha/2)},"& th":{padding:e.padding/4,verticalAlign:"top"},"& td":{padding:e.padding/4,verticalAlign:"top"}},entering:{},entered:{},exiting:{},exited:{}}}),{injectTheme:!0})(Zn);function tr(){return(tr=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function nr(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function rr(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function or(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function ar(e){var t=e.theme,n=e.classes,r=e.sounds,o=e.Animation,a=e.Frame,i=e.Words,l=e.Heading,s=e.animation,u=e.animate,p=e.show,m=e.node,d=e.header,y=(e.headerSize,e.icon),b=e.className,h=e.children,g=or(e,["theme","classes","sounds","Animation","Frame","Words","Heading","animation","animate","show","node","header","headerSize","icon","className","children"]),v=f()(n.root,b);return c.a.createElement(o,tr({animate:u,show:p,timeout:t.animTime},s),(function(e){return c.a.createElement(m,function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?nr(Object(n),!0).forEach((function(t){rr(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):nr(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({className:f()(v,n[e.status])},g),c.a.createElement(a,{animate:u,show:p,timeout:t.animTime,layer:"primary",level:0,corners:4,hover:!0,noBackground:!0,onClick:function(){return r.click&&r.click.play()}},(function(e){return c.a.createElement("div",null,c.a.createElement("header",{className:n.header},c.a.createElement(l,{node:"h1"},c.a.createElement(i,{animate:u,show:e.entered},d)),c.a.createElement("div",{className:n.icon},y)),c.a.createElement("div",{className:n.separator}),c.a.createElement("div",{className:n.children},"function"==typeof h?h(e):h))})))}))}ar.propTypes={Animation:s.a.any.isRequired,Frame:s.a.any.isRequired,Words:s.a.any.isRequired,Heading:s.a.any.isRequired,theme:s.a.any.isRequired,classes:s.a.any.isRequired,animate:s.a.bool,show:s.a.bool,animation:s.a.object,sounds:s.a.object,node:s.a.string,header:s.a.string.isRequired,headerSize:s.a.oneOf(["h1","h2","h3","h4","h5","h6"]),icon:s.a.any,children:s.a.any},ar.defaultProps={Animation:g,Frame:Mt,Words:$e,Heading:Ye,show:!0,sounds:{},node:"article",headerSize:"h2",icon:c.a.createElement("i",{className:"mdi mdi-package"})};var ir=a((function(e){return{root:{display:"block",verticalAlign:"middle","&$exiting, &$exited":{"& $header, & $children":{backgroundColor:"transparent"},"& $icon":{opacity:0},"& $separator":{width:0}},"&:hover":{"& $separator":{borderColor:e.color.primary.base,boxShadow:"0 0 ".concat(e.shadowLength,"px ")+Object(N.rgba)(e.color.primary.base,e.alpha)}}},header:{position:"relative",padding:[e.padding,3*e.padding,e.padding,e.padding],transition:"all ".concat(e.animTime,"ms ease-out"),backgroundColor:Object(N.rgba)(e.background.primary.level1,e.alpha),"& h1, & h2, & h3, & h4, & h5, & h6":{margin:0,fontSize:function(t){return e.typography.headerSizes[t.headerSize]}}},separator:{position:"absolute",top:"auto",left:"50%",transform:"translateX(-50%)",display:"block",width:"100%",borderStyle:"solid",borderColor:e.color.primary.dark,borderWidth:"0 0 1px",transition:"all ".concat(e.animTime,"ms ease-in")},icon:{position:"absolute",right:e.margin,top:"50%",transform:"translateY(-50%)",fontSize:function(t){return e.typography.headerSizes[t.headerSize]},color:e.color.header.base,textShadow:"0 0 ".concat(e.shadowLength,"px ")+Object(N.rgba)(e.color.header.base,e.alpha),transition:"all ".concat(e.animTime,"ms ease-out"),opacity:1},children:{transition:"all ".concat(e.animTime,"ms ease-out"),backgroundColor:Object(N.rgba)(e.background.primary.level0,e.alpha),padding:e.padding,"& p, & ul, & ol, & dl, & blockquote":{margin:0}},entering:{},entered:{},exiting:{},exited:{}}}),{injectTheme:!0})(Se()(ar));function cr(e){return(cr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function lr(){return(lr=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function sr(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function ur(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function fr(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function pr(e,t){return(pr=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function mr(e,t){return!t||"object"!==cr(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function dr(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function yr(e){return(yr=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function br(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var hr=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&pr(e,t)}(i,e);var t,n,r,o,a=(t=i,function(){var e,n=yr(t);if(dr()){var r=yr(this).constructor;e=Reflect.construct(n,arguments,r)}else e=n.apply(this,arguments);return mr(this,e)});function i(){return ur(this,i),a.apply(this,arguments)}return n=i,(r=[{key:"componentDidMount",value:function(){var e=this.props,t=e.animate,n=e.show,r=e.sounds;t&&n&&r.deploy&&r.deploy.play()}},{key:"componentDidUpdate",value:function(e){var t=this.props,n=t.animate,r=t.show,o=t.sounds;n&&e.show!==r&&o.deploy&&o.deploy.play()}},{key:"componentWillUnmount",value:function(){var e=this.props,t=e.animate,n=e.sounds;t&&n.deploy&&n.deploy.stop()}},{key:"render",value:function(){var e=this.props,t=e.theme,n=e.classes,r=e.Animation,o=e.animation,a=(e.sounds,e.animate),i=e.show,l=e.className,s=e.children,u=sr(e,["theme","classes","Animation","animation","sounds","animate","show","className","children"]),p=f()(n.root,l);return c.a.createElement(r,lr({animate:a,show:i,timeout:t.animTime},o),(function(e){return c.a.createElement("header",lr({className:f()(p,n[e.status])},u),c.a.createElement("div",{className:n.children},"function"==typeof s?s(e):s),c.a.createElement("div",{className:n.separator}))}))}}])&&fr(n.prototype,r),o&&fr(n,o),i}(i.Component);br(hr,"propTypes",{Animation:s.a.any.isRequired,theme:s.a.any.isRequired,classes:s.a.any.isRequired,animate:s.a.bool,show:s.a.bool,animation:s.a.object,sounds:s.a.object,children:s.a.any}),br(hr,"defaultProps",{Animation:g,sounds:{},show:!0});var gr=a((function(e){return{root:{display:"block",position:"relative",backgroundColor:Object(N.rgba)(e.background.primary.level0,e.alpha),paddingBottom:4,"&$exiting, &$exited":{backgroundColor:"transparent","& $separator":{width:0}}},separator:{position:"absolute",bottom:0,left:"50%",transform:"translateX(-50%)",display:"block",width:"100%",borderStyle:"solid",borderColor:e.color.primary.dark,borderWidth:"0 0 4px",transition:"all ".concat(e.animTime,"ms ease-in")},children:{display:"block"},entering:{},entered:{},exiting:{},exited:{}}}),{injectTheme:!0})(Se()(hr));function vr(e){return(vr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Or(){return(Or=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function wr(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function jr(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Pr(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function kr(e,t){return(kr=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function xr(e,t){return!t||"object"!==vr(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Sr(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function Rr(e){return(Rr=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Er(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var Tr=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&kr(e,t)}(i,e);var t,n,r,o,a=(t=i,function(){var e,n=Rr(t);if(Sr()){var r=Rr(this).constructor;e=Reflect.construct(n,arguments,r)}else e=n.apply(this,arguments);return xr(this,e)});function i(){return jr(this,i),a.apply(this,arguments)}return n=i,(r=[{key:"componentDidMount",value:function(){var e=this.props,t=e.animate,n=e.show,r=e.sounds;t&&n&&r.deploy&&r.deploy.play()}},{key:"componentDidUpdate",value:function(e){var t=this.props,n=t.animate,r=t.show,o=t.sounds;n&&e.show!==r&&o.deploy&&o.deploy.play()}},{key:"componentWillUnmount",value:function(){var e=this.props,t=e.animate,n=e.sounds;t&&n.deploy&&n.deploy.stop()}},{key:"render",value:function(){var e=this.props,t=e.theme,n=e.classes,r=e.Animation,o=e.animation,a=(e.sounds,e.animate),i=e.show,l=e.className,s=e.children,u=wr(e,["theme","classes","Animation","animation","sounds","animate","show","className","children"]),p=f()(n.root,l);return c.a.createElement(r,Or({animate:a,show:i,timeout:t.animTime},o),(function(e){return c.a.createElement("footer",Or({className:f()(p,n[e.status])},u),c.a.createElement("div",{className:n.separator}),c.a.createElement("div",{className:n.children},"function"==typeof s?s(e):s))}))}}])&&Pr(n.prototype,r),o&&Pr(n,o),i}(i.Component);Er(Tr,"propTypes",{Animation:s.a.any.isRequired,theme:s.a.any.isRequired,classes:s.a.any.isRequired,animate:s.a.bool,show:s.a.bool,animation:s.a.object,sounds:s.a.object,children:s.a.any}),Er(Tr,"defaultProps",{Animation:g,sounds:{},show:!0});var Ar=a((function(e){return{root:{display:"block",position:"relative",backgroundColor:Object(N.rgba)(e.background.primary.level0,e.alpha),"&$exiting, &$exited":{backgroundColor:"transparent","& $separator":{width:0}}},separator:{position:"absolute",top:"auto",left:"50%",transform:"translateX(-50%)",display:"block",width:"100%",borderStyle:"solid",borderColor:e.color.primary.dark,borderWidth:"0 0 1px",transition:"all ".concat(e.animTime,"ms ease-in")},children:{display:"block"},entering:{},entered:{},exiting:{},exited:{}}}),{injectTheme:!0})(Se()(Tr));function Nr(){return(Nr=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function qr(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Dr(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function _r(e){e.theme;var t,n=e.classes,r=e.row,o=e.nested,a=e.noGutter,i=e.noMargin,l=e.col,s=e.s,u=e.m,p=e.l,m=e.xl,d=e.offset,y=e.className,b=e.children,h=Dr(e,["theme","classes","row","nested","noGutter","noMargin","col","s","m","l","xl","offset","className","children"]),g=!r&&l,v=r&&l,O=r?n.row:n.col,w=(qr(t={},n.noGutter,a),qr(t,n["s"+s],s),qr(t,n["m"+u],u),qr(t,n["l"+p],p),qr(t,n["xl"+m],m),t);d.forEach((function(e){w[n["offset-"+e]]=!0}));var j=f()(O,i&&[n.noMargin],o&&[n.nested],g&&w,y);return c.a.createElement("div",Nr({className:j},h),v?c.a.createElement("div",{className:f()(n.col,w)},b):b)}function Cr(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function zr(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Cr(Object(n),!0).forEach((function(t){Lr(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Cr(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Lr(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}_r.propTypes={theme:s.a.any.isRequired,classes:s.a.any.isRequired,row:s.a.bool,nested:s.a.bool,noMargin:s.a.bool,col:s.a.bool,noGutter:s.a.bool,s:s.a.number,m:s.a.number,l:s.a.number,xl:s.a.number,offset:s.a.arrayOf(s.a.string)},_r.defaultProps={offset:[]};var Ir=function(e){return{width:e,marginLeft:"auto",left:"auto",right:"auto"}},$r=function(e,t){for(var n,r={},o=1;o<=e.columns;o++)n=100/(e.columns/o)+"%",r=zr({},r,Lr({},t+o,Ir(n)));return r},Fr=function(e,t){for(var n,r={},o=1;o<=e.columns;o++)n=100/(e.columns/o)+"%",r=zr({},r,Lr({},"offset-".concat(t).concat(o),{marginLeft:n}));return r};function Mr(){return(Mr=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var Wr=a((function(e){var t;return zr({row:{marginLeft:"auto",marginRight:"auto",marginBottom:e.margin,"&:after":{content:'""',display:"table",clear:"both"}},nested:{marginLeft:-e.margin/2,marginRight:-e.margin/2},noMargin:{marginBottom:0},col:{float:"left",boxSizing:"border-box",padding:"0 ".concat(e.margin/2,"px"),minHeight:1},noGutter:{padding:0}},$r(e,"s"),{},Fr(e,"s"),(Lr(t={},"@media screen and (min-width: ".concat(e.responsive.small+1,"px)"),zr({},$r(e,"m"),{},Fr(e,"m"))),Lr(t,"@media screen and (min-width: ".concat(e.responsive.medium+1,"px)"),zr({},$r(e,"l"),{},Fr(e,"l"))),Lr(t,"@media screen and (min-width: ".concat(e.responsive.large+1,"px)"),zr({},$r(e,"xl"),{},Fr(e,"xl"))),t))}),{injectTheme:!0})(_r),Hr=function(e){return c.a.createElement(Wr,Mr({row:!0},e))},Br=function(e){return c.a.createElement(Wr,Mr({col:!0},e))},Ur=Wr;function Gr(){return(Gr=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function Xr(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function Yr(e){var t=e.theme,n=e.classes,r=e.Animation,o=e.animation,a=e.animate,i=e.show,l=e.className,s=e.children,u=Xr(e,["theme","classes","Animation","animation","animate","show","className","children"]),p=f()(n.root,l);return c.a.createElement(r,Gr({animate:a,show:i,timeout:t.animTime},o),(function(e){return c.a.createElement("span",Gr({className:f()(p,n[e.status])},u),s)}))}Yr.propTypes={Animation:s.a.any.isRequired,theme:s.a.any.isRequired,classes:s.a.any.isRequired,animate:s.a.bool,show:s.a.bool,animation:s.a.object},Yr.defaultProps={Animation:g,show:!0};var Vr=a((function(e){return{root:{display:"inline-block",opacity:1,transition:"opacity ".concat(e.animTime,"ms ease-out"),"&$exiting, &$exited":{opacity:0}},entering:{},entered:{},exiting:{},exited:{}}}),{injectTheme:!0})(Yr),Jr=n(9);function Kr(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function Qr(){return(Qr=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var Zr=function(e){return e*Math.PI/180},eo=Object(Jr.arc)(),to=function(e){return e.children},no=function(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),o=2;o<n;o++)r[o-2]=arguments[o];return c.a.createElement(to,null,c.a.createElement("path",Qr({},r,{className:f()(t.light,t.elementFilter,r.className),d:eo(e)})),c.a.createElement("path",Qr({},r,{className:f()(t.light,r.className),d:eo(e)})))};function ro(e){var t=e.theme,n=e.classes,r=e.Animation,o=e.animation,a=e.animate,i=e.show,l=e.size,s=e.className,u=Kr(e,["theme","classes","Animation","animation","animate","show","size","className"]),p=f()(n.root,s);return c.a.createElement(r,Qr({animate:a,show:i,timeout:t.animTime},o),(function(e){return c.a.createElement("svg",Qr({className:f()(p,n[e.status]),width:l,height:l,viewBox:"0 0 1000 1000",version:"1.1"},u),c.a.createElement("filter",{id:"arwes-logo-filter-blur"},c.a.createElement("feGaussianBlur",{in:"SourceGraphic",stdDeviation:"20"})),c.a.createElement("g",{style:{transform:"translate(500px,500px)"}},c.a.createElement("circle",{className:f()(n.light,n.elementFilter),cx:"0",cy:"0",r:"85"}),c.a.createElement("circle",{className:n.light,cx:"0",cy:"0",r:"85"}),c.a.createElement("path",{className:n.center,d:eo({innerRadius:200,outerRadius:275,startAngle:0,endAngle:Zr(360)})}),c.a.createElement("path",{className:n.outer,d:eo({innerRadius:375,outerRadius:475,startAngle:0,endAngle:Zr(360)})}),no({innerRadius:375,outerRadius:475,startAngle:Zr(15),endAngle:Zr(105)},n),no({innerRadius:375,outerRadius:475,startAngle:Zr(135),endAngle:Zr(225)},n),no({innerRadius:375,outerRadius:475,startAngle:Zr(255),endAngle:Zr(345)},n)))}))}ro.propTypes={Animation:s.a.any.isRequired,theme:s.a.any.isRequired,classes:s.a.any.isRequired,animate:s.a.bool,show:s.a.bool,animation:s.a.object,layer:s.a.oneOf(["primary","secondary","header","control","success","alert","disabled"]),size:s.a.number},ro.defaultProps={Animation:g,show:!0,layer:"primary",size:100};var oo=a((function(e){return{root:{display:"inline-block",verticalAlign:"middle",transition:"opacity ".concat(e.animTime,"ms ease-out"),animation:function(t){return t.animate?"arwes-logo-rotate ".concat(200*e.animTime,"ms infinite linear"):""},opacity:1,"&$exiting, &$exited":{opacity:0}},light:{fill:function(t){return e.color[t.layer].base}},center:{fill:function(t){return Object(N.rgba)(e.color[t.layer].base,.5)}},outer:{fill:function(t){return Object(N.rgba)(e.color[t.layer].base,.2)}},elementFilter:{filter:"url(#arwes-logo-filter-blur)"},entering:{},entered:{},exiting:{},exited:{},"@keyframes arwes-logo-rotate":{"0%":{transform:"rotate(0deg)"},"100%":{transform:"rotate(360deg)"}}}}),{injectTheme:!0})(ro),ao=o.ThemeProvider,io=n(6),co=n.n(io),lo=function(e){return{base:e,light:Object(N.lighten)(.2,e),dark:Object(N.darken)(.2,e)}},so=function(e){return{level0:e,level1:Object(N.lighten)(.015,e),level2:Object(N.lighten)(.03,e),level3:Object(N.lighten)(.045,e)}},uo={margin:20,padding:20,shadowLength:4,animTime:250,alpha:.65,accent:.2,color:{primary:lo("#26dafd"),secondary:lo("#df9527"),header:lo("#a1ecfb"),control:lo("#acf9fb"),success:lo("#00ff00"),alert:lo("#ff0000"),disabled:lo("#999999")},background:{primary:so("#021114"),secondary:so("#180f02"),header:so("#032026"),control:so("#041e1f"),success:so("#081402"),alert:so("#140202"),disabled:so("#141414")},typography:{lineHeight:1.5,headerSizes:{h1:28,h2:24,h3:21,h4:18,h5:16,h6:16},fontSize:21,headerFontFamily:'"Electrolize", "sans-serif"',fontFamily:'"Titillium Web", "sans-serif"'},code:{fontSize:14,fontFamily:'Monaco, "Bitstream Vera Sans Mono", "Lucida Console", Terminal, monospace',background:"#000000",color:"#3aafff",comment:"#4a5f78",keyword:"#bB7Dbf",operator:"#0075e8",function:"#8b6ccf",variable:"#3aafff",selector:"#3aafff",value:"#05d48e"},columns:12,responsive:{small:600,medium:992,large:1200}},fo=function(e){return co()(!0,{},uo,e)},po=n(10),mo=n.n(po);function yo(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function bo(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var ho=function(e,t){var n=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?yo(Object(n),!0).forEach((function(t){bo(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):yo(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({Howl:mo.a.Howl},e),r=t||{},o=r.sound,a=void 0===o?{}:o,i=r.settings,c=void 0===i?{}:i,l=new n.Howl(a);if(c.oneAtATime){var s,u=l.play.bind(l);l.play=function(){return s&&this.stop(s),s=u.apply(void 0,arguments)}}return l};function go(e){return(go="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function vo(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Oo(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function wo(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function jo(e,t){return(jo=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Po(e,t){return!t||"object"!==go(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ko(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function xo(e){return(xo=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function So(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var Ro=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&jo(e,t)}(i,e);var t,n,r,o,a=(t=i,function(){var e,n=xo(t);if(ko()){var r=xo(this).constructor;e=Reflect.construct(n,arguments,r)}else e=n.apply(this,arguments);return Po(this,e)});function i(){return Oo(this,i),a.apply(this,arguments)}return n=i,(r=[{key:"getChildContext",value:function(){var e=this.props,t=e.sounds,n=e.createPlayer,r=t.shared,o=t.players,a={};return Object.keys(o).forEach((function(e){var t=o[e];t.sound=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?vo(Object(n),!0).forEach((function(t){So(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):vo(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},r,{},t.sound),a[e]=n(null,t)})),{sounds:a}}},{key:"render",value:function(){return this.props.children}}])&&wo(n.prototype,r),o&&wo(n,o),i}(i.Component);So(Ro,"propTypes",{sounds:s.a.object.isRequired,createPlayer:s.a.any.isRequired}),So(Ro,"defaultProps",{createPlayer:ho}),So(Ro,"childContextTypes",{sounds:s.a.object});var Eo={shared:{preload:!0,volume:.5},players:{}},To=function(e){return co()(!0,{},Eo,e)},Ao=r}])}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,